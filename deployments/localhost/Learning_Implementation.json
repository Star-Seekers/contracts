{
  "address": "0xd2D7715BAe07e5B9d7c0Ec0b671B9bAD6b9dBEBb",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gameManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cloneId",
          "type": "uint256"
        }
      ],
      "name": "LearningStateUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cloneId",
          "type": "uint256"
        }
      ],
      "name": "completeLearning",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cloneId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_skillId",
          "type": "uint256"
        }
      ],
      "name": "getLearningLog",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "learning_points",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "skill_level",
              "type": "uint256"
            }
          ],
          "internalType": "struct Learning.LearningLog",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cloneId",
          "type": "uint256"
        }
      ],
      "name": "getLearningState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "is_learning",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "end_time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "learning",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "start_time",
              "type": "uint256"
            }
          ],
          "internalType": "struct Learning.LearningState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cloneId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_skillId",
          "type": "uint256"
        }
      ],
      "name": "startLearning",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cloneId",
          "type": "uint256"
        }
      ],
      "name": "stopLearning",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x977bf59e0d0ee621d5d7305b5d736d00d732f35c752c7d4d4d1cb5705e4e31d9",
  "receipt": {
    "to": null,
    "from": "0x90F79bf6EB2c4f870365E785982E1f101E93b906",
    "contractAddress": "0xd2D7715BAe07e5B9d7c0Ec0b671B9bAD6b9dBEBb",
    "transactionIndex": 0,
    "gasUsed": "1692986",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x7c972d20f94c55c27cdf449f521935319ec8d58c51eece444afebfb3d43b7a5c",
    "transactionHash": "0x977bf59e0d0ee621d5d7305b5d736d00d732f35c752c7d4d4d1cb5705e4e31d9",
    "logs": [],
    "blockNumber": 9611960,
    "cumulativeGasUsed": "1692986",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x261D8c5e9742e6f7f1076Fa1F560894524e19cad"
  ],
  "numDeployments": 1,
  "solcInputHash": "dbed9630ff08f62ad5e23a1d6a18ff67",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gameManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cloneId\",\"type\":\"uint256\"}],\"name\":\"LearningStateUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cloneId\",\"type\":\"uint256\"}],\"name\":\"completeLearning\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cloneId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_skillId\",\"type\":\"uint256\"}],\"name\":\"getLearningLog\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"learning_points\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"skill_level\",\"type\":\"uint256\"}],\"internalType\":\"struct Learning.LearningLog\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cloneId\",\"type\":\"uint256\"}],\"name\":\"getLearningState\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"is_learning\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"end_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"learning\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"}],\"internalType\":\"struct Learning.LearningState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cloneId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_skillId\",\"type\":\"uint256\"}],\"name\":\"startLearning\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cloneId\",\"type\":\"uint256\"}],\"name\":\"stopLearning\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"completeLearning(uint256)\":{\"details\":\"can only be called when game is not in maintenance, the clone is not for sale, and only the clone owner.\",\"params\":{\"_cloneId\":\"the clone id to complete learning on\"}},\"getLearningLog(uint256,uint256)\":{\"params\":{\"_cloneId\":\"the clone id to retrieve\",\"_skillId\":\"the skill id of the skill to retrieve the learning log of.\"},\"returns\":{\"_0\":\"LearningLog\"}},\"getLearningState(uint256)\":{\"params\":{\"_cloneId\":\"the clone id to retrieve\"},\"returns\":{\"_0\":\"LearningState\"}},\"startLearning(uint256,uint256)\":{\"details\":\"can only be called when game is not in maintenance, the clone is not for sale, and only the clone owner.\",\"params\":{\"_cloneId\":\"clone id to start training on\",\"_skillId\":\"skill id to start training on\"}},\"stopLearning(uint256)\":{\"details\":\"can only be called when game is not in maintenance, the clone is not for sale, and only the clone owner.\",\"params\":{\"_cloneId\":\"the clone id to complete learning on\"}}},\"version\":1},\"userdoc\":{\"events\":{\"LearningStateUpdated(uint256)\":{\"notice\":\"emitted any time we update the learning state\"}},\"kind\":\"user\",\"methods\":{\"completeLearning(uint256)\":{\"notice\":\"after training has completed call this function to update state\"},\"getLearningLog(uint256,uint256)\":{\"notice\":\"retrieve a clones learning log for a specific skill\"},\"getLearningState(uint256)\":{\"notice\":\"get the learning state of a specific clone\"},\"startLearning(uint256,uint256)\":{\"notice\":\"start training on a specific clone\"},\"stopLearning(uint256)\":{\"notice\":\"stop training on a skill that's still in training\"}},\"notice\":\"this contract serves as the central location for clone s\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Learning.sol\":\"Learning\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\"},\"src/GameManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\n\\nimport \\\"hardhat/console.sol\\\";\\n\\ncontract GameManager {\\n    address public admin;\\n    address public chainlinkFeed;\\n    address payable public federation;\\n    bool public maintenance = false;\\n    uint256 public cloneCost = 100; /// usd price\\n    uint256 public salesTax = 5; /// percentage\\n    uint256 public startingCred = 10000;\\n\\n    /// @notice contractAddresses[\\\"ContractName\\\"] => contractAddress\\n    mapping(string => address) public contractAddresses;\\n    /// @notice hasReceivedStartingCred[playerAddress] => boolean\\n    mapping(address => bool) public hasReceivedStartingCred;\\n    /// @notice isGameContract[contractAddress] => boolean\\n    mapping(address => bool) public isGameContract;\\n\\n    /// @notice insures only the admin address can make these changes\\n    modifier onlyAdmin() {\\n        console.log(\\\"modifier\\\", admin);\\n\\n        require(msg.sender == admin, \\\"Star Seekers: Admin only\\\");\\n        _;\\n    }\\n    /// @notice insures only an address registered as a game contract can make these changes\\n    modifier onlyGameContract() {\\n        require(\\n            isGameContract[msg.sender],\\n            \\\"Star Seekers: Not a game contract\\\"\\n        );\\n        _;\\n    }\\n\\n    event AddContract(string name, address contractAddress);\\n    event AdminUpdated(address oldAdmin, address newAdmin);\\n    event RemoveContract(string name, address contractAddress);\\n    event ChainlinkFeedUpdated(address newAddress);\\n    event MaintenanceUpdated(bool status);\\n    event FederationUpdated(address federation);\\n    event SalesTaxUpdated(uint256 amount);\\n    event StartingCredUpdated(uint256 amount);\\n    event ReceivedStartingCred(address player);\\n\\n    constructor(\\n        address _admin,\\n        address _chainlinkFeed,\\n        address payable _federation\\n    ) {\\n        require(_admin != address(0), \\\"Star Seekers: Admin address required\\\");\\n        require(\\n            _chainlinkFeed != address(0),\\n            \\\"Star Seekers: Chainlink Feed address required\\\"\\n        );\\n        require(\\n            _federation != address(0),\\n            \\\"Star Seekers: Federation address required\\\"\\n        );\\n        console.log(\\\"constructor\\\", _admin);\\n\\n        admin = _admin;\\n\\n        console.log(\\\"constructor after set\\\", admin);\\n        chainlinkFeed = _chainlinkFeed;\\n        federation = _federation;\\n    }\\n\\n    /// @notice adds a contract as a registered game contract\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _name contract name used when calling getters.\\n    /// @param _address the address of the contract we're adding to the database\\n    function addContract(string memory _name, address _address)\\n        public\\n        onlyAdmin\\n    {\\n        contractAddresses[_name] = _address;\\n        isGameContract[_address] = true;\\n\\n        emit AddContract(_name, _address);\\n    }\\n\\n    /// @notice changes the admin\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _newAdmin new admin address\\n    function changeAdmin(address _newAdmin) public onlyAdmin {\\n        admin = _newAdmin;\\n\\n        emit AdminUpdated(msg.sender, _newAdmin);\\n    }\\n\\n    /// @notice removes a contract from the database by name\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _name contract name that will be removed from database\\n    function removeContract(string memory _name) public onlyAdmin {\\n        address contractAddress = contractAddresses[_name];\\n        require(\\n            isGameContract[contractAddress],\\n            \\\"Star Seekers: Not a game contract\\\"\\n        );\\n\\n        contractAddresses[_name] = address(0);\\n        isGameContract[contractAddress] = false;\\n\\n        emit RemoveContract(_name, contractAddress);\\n    }\\n\\n    /// @notice changes the feed for chainlink\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _feedContract address of the chainlink feed contract\\n    function setChainlinkFeed(address _feedContract) public onlyAdmin {\\n        chainlinkFeed = _feedContract;\\n\\n        emit ChainlinkFeedUpdated(_feedContract);\\n    }\\n\\n    /// @notice changes the maintenance status\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _status boolean to set maintenance\\n    function setMaintenance(bool _status) public onlyAdmin {\\n        maintenance = _status;\\n\\n        emit MaintenanceUpdated(_status);\\n    }\\n\\n    /// @notice changes federation address\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _newFederationAddress new federation address\\n    function setFederation(address payable _newFederationAddress)\\n        public\\n        onlyAdmin\\n    {\\n        federation = _newFederationAddress;\\n\\n        emit FederationUpdated(federation);\\n    }\\n\\n    /// @notice change sales tax\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _amount amount sales tax will be updated to\\n    function setSalesTax(uint256 _amount) public onlyAdmin {\\n        salesTax = _amount;\\n\\n        emit SalesTaxUpdated(_amount);\\n    }\\n\\n    /// @notice change starting cred amount\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _amount new starting cred amount\\n    function setStartingCred(uint256 _amount) public onlyAdmin {\\n        startingCred = _amount;\\n\\n        emit StartingCredUpdated(_amount);\\n    }\\n\\n    /// @notice sets boolean to true when a wallet has received starting cred for creating a new clone\\n    /// @dev only a game contract should be able to call this function. A player can only receive CRED\\n    /// for the first clone created with that wallet.\\n    /// @param _player address to update\\n    function updateHasReceivedStartingCred(address _player)\\n        external\\n        onlyGameContract\\n    {\\n        hasReceivedStartingCred[_player] = true;\\n\\n        emit ReceivedStartingCred(_player);\\n    }\\n}\\n\",\"keccak256\":\"0xf97078367be23b053c726f4604778d5c0d5bb2cc1870b94a159012c7c9ed800d\",\"license\":\"GPLv3\"},\"src/Learning.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/UniversalData.sol\\\";\\nimport \\\"./interfaces/ISkills.sol\\\";\\nimport \\\"./interfaces/IStats.sol\\\";\\nimport \\\"./interfaces/ICloningFacility.sol\\\";\\n\\n/// @notice this contract serves as the central location for clone s\\ncontract Learning is UniversalData {\\n    struct LearningState {\\n        bool is_learning;\\n        uint256 end_time;\\n        uint256 learning;\\n        uint256 start_time;\\n    }\\n    /// @notice learningState[_cloneId] => LearningState\\n    mapping(uint256 => LearningState) learningState;\\n\\n    struct LearningLog {\\n        uint256 learning_points;\\n        uint256 skill_level;\\n    }\\n    /// @notice learningLog[_cloneId][_skillId] => LearningLog\\n    mapping(uint256 => mapping(uint256 => LearningLog)) learningLog;\\n\\n    /// @notice emitted any time we update the learning state\\n    event LearningStateUpdated(uint256 cloneId);\\n\\n    constructor(address _gameManager) UniversalData(_gameManager) {}\\n\\n    /// @notice after training has completed call this function to update state\\n    /// @dev can only be called when game is not in maintenance, the clone is not for sale,\\n    /// and only the clone owner.\\n    /// @param _cloneId the clone id to complete learning on\\n    function completeLearning(uint256 _cloneId)\\n        public\\n        notInMaintenance\\n        notForSale(_cloneId)\\n        onlyCloneOwner(msg.sender, _cloneId)\\n    {\\n        require(\\n            learningState[_cloneId].is_learning,\\n            \\\"Star Seekers: Not currently training any skills\\\"\\n        );\\n        require(\\n            learningState[_cloneId].end_time <= block.timestamp,\\n            \\\"Star Seekers: Skill has not finished training\\\"\\n        );\\n\\n        _resetAndUpdateLearningState(_cloneId);\\n\\n        emit LearningStateUpdated(_cloneId);\\n    }\\n\\n    /// @notice start training on a specific clone\\n    /// @dev can only be called when game is not in maintenance, the clone is not for sale,\\n    /// and only the clone owner.\\n    /// @param _cloneId clone id to start training on\\n    /// @param _skillId skill id to start training on\\n    function startLearning(uint256 _cloneId, uint256 _skillId)\\n        public\\n        notInMaintenance\\n        notForSale(_cloneId)\\n        onlyCloneOwner(msg.sender, _cloneId)\\n    {\\n        require(\\n            !learningState[_cloneId].is_learning,\\n            \\\"Star Seekers: Already learning skill.\\\"\\n        );\\n        /// @dev creats an instance of the Skills contract using the address stored on GameManager\\n        ISkills skillsInstance = ISkills(\\n            gameManager.contractAddresses(\\\"Skills\\\")\\n        );\\n        /// @dev loads skill definitions\\n        ISkills.Skill memory skill = skillsInstance.getSkillById(_skillId);\\n        /// @dev check if clone is able to learn this skill\\n        _isLearnable(skill, _cloneId);\\n\\n        learningState[_cloneId].start_time = block.timestamp;\\n        learningState[_cloneId].end_time =\\n            block.timestamp +\\n            _calculateLearningTimeRemaining(skill, _cloneId);\\n        learningState[_cloneId].is_learning = true;\\n        learningState[_cloneId].learning = _skillId;\\n\\n        emit LearningStateUpdated(_cloneId);\\n    }\\n\\n    /// @notice stop training on a skill that's still in training\\n    /// @dev can only be called when game is not in maintenance, the clone is not for sale,\\n    /// and only the clone owner.\\n    /// @param _cloneId the clone id to complete learning on\\n    function stopLearning(uint256 _cloneId)\\n        public\\n        notInMaintenance\\n        notForSale(_cloneId)\\n        onlyCloneOwner(msg.sender, _cloneId)\\n    {\\n        require(\\n            learningState[_cloneId].is_learning,\\n            \\\"Star Seekers: Not currently training any skills\\\"\\n        );\\n        require(\\n            learningState[_cloneId].end_time > block.timestamp,\\n            \\\"Star Seekers: Skill has already finished training\\\"\\n        );\\n\\n        _resetAndUpdateLearningState(_cloneId);\\n\\n        emit LearningStateUpdated(_cloneId);\\n    }\\n\\n    /// @notice retrieve a clones learning log for a specific skill\\n    /// @param _cloneId the clone id to retrieve\\n    /// @param _skillId the skill id of the skill to retrieve the learning log of.\\n    /// @return LearningLog\\n    function getLearningLog(uint256 _cloneId, uint256 _skillId)\\n        public\\n        view\\n        returns (LearningLog memory)\\n    {\\n        return learningLog[_cloneId][_skillId];\\n    }\\n\\n    /// @notice get the learning state of a specific clone\\n    /// @param _cloneId the clone id to retrieve\\n    /// @return LearningState\\n    function getLearningState(uint256 _cloneId)\\n        public\\n        view\\n        returns (LearningState memory)\\n    {\\n        return learningState[_cloneId];\\n    }\\n\\n    /// @notice calculate learning points earned\\n    /// @param _skill Skill enum skill they are training\\n    /// @param _cloneId the id of a clone\\n    /// @return uint256 returns time remaining in minutes as a timestamp\\n    function _calculateLearningPointsEarned(\\n        ISkills.Skill memory _skill,\\n        uint256 _cloneId\\n    ) internal view returns (uint256) {\\n        uint256 startTime = learningState[_cloneId].start_time;\\n        uint256 currentTime = block.timestamp;\\n        uint256 endTime = learningState[_cloneId].end_time;\\n        uint256 trainingTime;\\n\\n        if (currentTime > endTime) {\\n            trainingTime = (endTime - startTime) % 60;\\n        } else {\\n            trainingTime = (currentTime - startTime) % 60;\\n        }\\n\\n        ICloningFacility cloningFacility = ICloningFacility(\\n            gameManager.contractAddresses(\\\"CloningFacility\\\")\\n        );\\n\\n        uint256 learningPointsPerMinute = _calculateLearningPointsPerMinute(\\n            cloningFacility.getCloneStatLevel(\\n                _cloneId,\\n                _skill.primary_attribute\\n            ),\\n            cloningFacility.getCloneStatLevel(\\n                _cloneId,\\n                _skill.secondary_attribute\\n            )\\n        );\\n\\n        return trainingTime * learningPointsPerMinute;\\n    }\\n\\n    /// @notice calculate the amount of learning time remaining based on the clones stats\\n    /// @param _skill Skill enum\\n    /// @param _cloneId cloneId the cloneId\\n    /// @return uint256 amount of time in minutes remaining\\n    function _calculateLearningTimeRemaining(\\n        ISkills.Skill memory _skill,\\n        uint256 _cloneId\\n    ) internal view returns (uint256) {\\n        ICloningFacility cloningFacility = ICloningFacility(\\n            gameManager.contractAddresses(\\\"CloningFacility\\\")\\n        );\\n\\n        uint256 primaryAttributeLevel = cloningFacility.getCloneStatLevel(\\n            _cloneId,\\n            _skill.primary_attribute\\n        );\\n\\n        uint256 secondaryAttributeLevel = cloningFacility.getCloneStatLevel(\\n            _cloneId,\\n            _skill.secondary_attribute\\n        );\\n\\n        /// @dev calculate how many learning points are required to reach next level\\n        uint256 learningPointsRequired = _calculateLearningPointsRequired(\\n            _skill,\\n            _cloneId,\\n            primaryAttributeLevel,\\n            secondaryAttributeLevel\\n        );\\n\\n        uint256 learningPointsPerMinute = _calculateLearningPointsPerMinute(\\n            primaryAttributeLevel,\\n            secondaryAttributeLevel\\n        );\\n\\n        return (learningPointsRequired / learningPointsPerMinute) * 1 minutes;\\n    }\\n\\n    /// @notice calculates required learning points based on player stats\\n    /// @param _skill skill struct\\n    /// @param _cloneId cloneId\\n    /// @param _primaryPlayerStatAttribute primary player stat level\\n    /// @param _secondaryPlayerStatAttribute secondary player stat level\\n    /// @return uint256 learning points required to level a skill up\\n    function _calculateLearningPointsRequired(\\n        ISkills.Skill memory _skill,\\n        uint256 _cloneId,\\n        uint256 _primaryPlayerStatAttribute, // player attribute level\\n        uint256 _secondaryPlayerStatAttribute // player attribute level\\n    ) internal view returns (uint256) {\\n        return\\n            (_calculateBaseLearningPoints(\\n                _skill.multiplier,\\n                learningLog[_cloneId][_skill.id].skill_level + 1\\n            ) - learningLog[_cloneId][_skill.id].learning_points) /\\n            (_primaryPlayerStatAttribute + (_secondaryPlayerStatAttribute / 2));\\n    }\\n\\n    /// @notice calculates base learning points based on skill multiplier and the skill\\n    /// level being trained\\n    /// @param _multiplier skill multiplier, can be found on Skill struct\\n    /// @param _skillLevel players skill level\\n    /// @return uint256 base learning points\\n\\n    function _calculateBaseLearningPoints(\\n        uint256 _multiplier,\\n        uint256 _skillLevel // player skill level\\n    ) internal pure returns (uint256) {\\n        return (250 * _multiplier) * 6**(_skillLevel - 1);\\n    }\\n\\n    /// @notice calculates how many learning points a player earns based on their stats per minute\\n    /// @param _primaryPlayerStatAttribute players stat level\\n    /// @param _secondaryPlayerStatAttribute secondary stat level\\n    /// @return uint256 learning points per minute based on the stat levels of the player\\n    function _calculateLearningPointsPerMinute(\\n        uint256 _primaryPlayerStatAttribute, // player stat attribute\\n        uint256 _secondaryPlayerStatAttribute // player stat attribute\\n    ) internal pure returns (uint256) {\\n        return\\n            (_primaryPlayerStatAttribute * 1) /\\n            2 +\\n            (_secondaryPlayerStatAttribute * 1) /\\n            4;\\n    }\\n\\n    /// @notice checks if a skill meets the requirements to be learned\\n    /// @param _skill Skill struct\\n    /// @param _cloneId clone id\\n    /// @return bool success\\n    function _isLearnable(ISkills.Skill memory _skill, uint256 _cloneId)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        /// @dev checks that players has not reached max skill level\\n        require(\\n            learningLog[_cloneId][_skill.id].skill_level < 5,\\n            \\\"Star Seekers: Skill already at max\\\"\\n        );\\n        /// @dev checks for skill dependencies\\n        if (_skill.dependency) {\\n            /// @dev checks that the dependent skill is at level 5\\n            require(\\n                learningLog[_cloneId][_skill.dependency_id].skill_level == 5,\\n                \\\"Skill Seekers: Dependent skill must be level 5 before training\\\"\\n            );\\n        }\\n\\n        return true;\\n    }\\n\\n    /// @notice resets the learning state and updates the learning log\\n    /// @param _cloneId cloneId\\n    /// @return bool success\\n    function _resetAndUpdateLearningState(uint256 _cloneId)\\n        internal\\n        returns (bool)\\n    {\\n        /// @dev creats an instance of the Skills contract using the address stored on GameManager\\n        ISkills skillsInstance = ISkills(\\n            gameManager.contractAddresses(\\\"Skills\\\")\\n        );\\n        /// @dev loads skill definitions\\n        ISkills.Skill memory skill = skillsInstance.getSkillById(\\n            learningState[_cloneId].learning\\n        );\\n\\n        learningLog[_cloneId][learningState[_cloneId].learning]\\n            .learning_points = _calculateLearningPointsEarned(skill, _cloneId);\\n\\n        /// @dev reset learning state\\n        learningState[_cloneId].start_time = 0;\\n        learningState[_cloneId].end_time = 0;\\n        learningState[_cloneId].is_learning = false;\\n        learningState[_cloneId].learning = 0;\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xdbd37acac0a40d37b34e1dac96b2fe6fecbb3f126670d26682ddbd1333b428c8\",\"license\":\"GPLv3\"},\"src/interfaces/ICloningFacility.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IStats.sol\\\";\\n\\ninterface ICloningFacility {\\n    struct CloneData {\\n        address owner;\\n        bool for_sale;\\n        string uri; // IPFS url\\n        uint256 price;\\n        uint256 id;\\n    }\\n\\n    function create(string memory uri) external payable;\\n\\n    function changeOwner(address newOwner, uint256 cloneId)\\n        external\\n        returns (bool);\\n\\n    function changeSalesStatus(\\n        uint256 cloneId,\\n        bool status,\\n        uint256 price\\n    ) external returns (bool);\\n\\n    function changeUri(uint256 cloneId, string memory uri)\\n        external\\n        returns (bool);\\n\\n    function getCloneData(uint256 cloneId)\\n        external\\n        view\\n        returns (CloneData memory);\\n\\n    function getCloneStatLevel(uint256 cloneId, IStats.Stat stat)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getCloneUri(uint256 cloneId) external view returns (string memory);\\n\\n    function increaseStat(\\n        uint256 cloneId,\\n        IStats.Stat stat,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function decreaseStat(\\n        uint256 cloneId,\\n        IStats.Stat stat,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x817c5ad5212894fa6730ddca8ab81ad5d3c5da24dd5d2c11e46ea422bb7c4ca8\",\"license\":\"GPLv3\"},\"src/interfaces/ILearning.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\nimport \\\"./IStats.sol\\\";\\n\\ninterface ILearning {\\n    struct LearningState {\\n        bool is_learning;\\n        uint256 end_time;\\n        uint256 learning;\\n        uint256 start_time;\\n    }\\n    struct LearningLog {\\n        uint256 learning_points;\\n        uint256 skill_level;\\n    }\\n\\n    function getLearningLog(uint256 cloneId, uint256 skillId)\\n        external\\n        returns (LearningLog memory);\\n\\n    function getLearningState(uint256 cloneId)\\n        external\\n        returns (LearningState memory);\\n}\\n\",\"keccak256\":\"0x4f6cf9986a68eae06f70bdcc08a4bcf9149a3e9a33afb857b147d00e5d5e4748\",\"license\":\"GPLv3\"},\"src/interfaces/ISkills.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\nimport \\\"./IStats.sol\\\";\\n\\ninterface ISkills {\\n    struct Skill {\\n        bool dependency;\\n        IStats.Stat primary_attribute;\\n        IStats.Stat secondary_attribute;\\n        string icon;\\n        string name;\\n        uint256 dependency_id;\\n        uint256 group_id;\\n        uint256 id;\\n        uint256 multiplier;\\n        uint256[5] bonus_per_level;\\n    }\\n\\n    function getSkillById(uint256 skillId) external returns (Skill memory);\\n\\n    function getSkillsByGroupId(uint256 skillGroupId)\\n        external\\n        returns (uint256[] memory);\\n\\n    function getSkillByName(string memory name) external returns (Skill memory);\\n}\\n\",\"keccak256\":\"0xb3a8bac1938fdfc5240b061bf0038e6e6b66389f9fd3168a5148531d3946baff\",\"license\":\"GPLv3\"},\"src/interfaces/IStats.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\n\\ninterface IStats {\\n    enum Stat {\\n        charisma,\\n        ingenuity,\\n        intelligence,\\n        spirit,\\n        toughness\\n    }\\n}\\n\",\"keccak256\":\"0xe71107b3bf0d3846b5e1bb42bd78995352e1281abd0a3f0460dbcc489620186e\",\"license\":\"GPLv3\"},\"src/interfaces/UniversalData.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\n\\nimport \\\"../GameManager.sol\\\";\\nimport \\\"../interfaces/ICloningFacility.sol\\\";\\nimport \\\"../interfaces/ILearning.sol\\\";\\n\\ncontract UniversalData {\\n    GameManager internal gameManager;\\n\\n    modifier notInMaintenance() {\\n        require(\\n            !gameManager.maintenance(),\\n            \\\"Star Seekers: Down for Maintenance\\\"\\n        );\\n        _;\\n    }\\n    modifier onlyGameManager() {\\n        require(\\n            address(gameManager) == msg.sender,\\n            \\\"Star Seekers: Only game manager\\\"\\n        );\\n        _;\\n    }\\n    modifier onlyGameContract() {\\n        require(\\n            gameManager.isGameContract(msg.sender),\\n            \\\"Star Seekers: Not a game contract\\\"\\n        );\\n        _;\\n    }\\n    modifier onlyAdmin() {\\n        require(msg.sender == gameManager.admin(), \\\"Star Seekers: Admin only\\\");\\n        _;\\n    }\\n    modifier onlyCloneOwner(address _owner, uint256 _cloneId) {\\n        ICloningFacility cloningFacility = ICloningFacility(\\n            gameManager.contractAddresses(\\\"CloningFacility\\\")\\n        );\\n        ICloningFacility.CloneData memory cloneData = cloningFacility\\n            .getCloneData(_cloneId);\\n\\n        require(cloneData.owner == _owner, \\\"Star Seekers: Clone owner only\\\");\\n        _;\\n    }\\n    modifier notForSale(uint256 _cloneId) {\\n        ICloningFacility cloningFacility = ICloningFacility(\\n            gameManager.contractAddresses(\\\"CloningFacility\\\")\\n        );\\n        ICloningFacility.CloneData memory cloneData = cloningFacility\\n            .getCloneData(_cloneId);\\n\\n        require(\\n            cloneData.for_sale == false,\\n            \\\"Star Seekers: Can't complete action while clone is for sale\\\"\\n        );\\n        _;\\n    }\\n\\n    constructor(address _gameManager) {\\n        gameManager = GameManager(_gameManager);\\n    }\\n}\\n\",\"keccak256\":\"0x9f60d3a532e80921d1750173af333ea685e0a58ddf42d73be88c22232ea4795a\",\"license\":\"GPLv3\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051611dcb380380611dcb83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b611d3a806100916000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631329cc001461005c578063474d20021461007157806348d917ef146100c257806349b9e5bd146100d5578063b7aab30d146100e8575b600080fd5b61006f61006a366004611912565b610116565b005b61008461007f366004611912565b610515565b6040516100b9919081511515815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b61006f6100d0366004611912565b61058b565b61006f6100e3366004611942565b610937565b6100fb6100f6366004611942565b610e5f565b604080518251815260209283015192810192909252016100b9565b60008054906101000a90046001600160a01b03166001600160a01b0316636c376cc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561016257600080fd5b505afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a9190611754565b156101c05760405162461bcd60e51b81526004016101b790611a20565b60405180910390fd5b60008054604051637733e61560e11b81528392916001600160a01b03169063ee67cc2a906101f09060040161199a565b60206040518083038186803b15801561020857600080fd5b505afa15801561021c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610240919061173a565b6040516308b82a1b60e21b8152600481018490529091506000906001600160a01b038316906322e0a86c9060240160006040518083038186803b15801561028657600080fd5b505afa15801561029a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c2919081019061176e565b6020810151909150156102e75760405162461bcd60e51b81526004016101b7906119c3565b60008054604051637733e61560e11b81523392879290916001600160a01b039091169063ee67cc2a9061031c9060040161199a565b60206040518083038186803b15801561033457600080fd5b505afa158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c919061173a565b6040516308b82a1b60e21b8152600481018490529091506000906001600160a01b038316906322e0a86c9060240160006040518083038186803b1580156103b257600080fd5b505afa1580156103c6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ee919081019061176e565b9050836001600160a01b031681600001516001600160a01b0316146104255760405162461bcd60e51b81526004016101b790611963565b60008881526001602052604090205460ff166104535760405162461bcd60e51b81526004016101b790611a62565b6000888152600160208190526040909120015442106104ce5760405162461bcd60e51b815260206004820152603160248201527f53746172205365656b6572733a20536b696c6c2068617320616c72656164792060448201527066696e697368656420747261696e696e6760781b60648201526084016101b7565b6104d788610ea2565b506040518881527fcea852c4a4cc5ad56c67fe9cc69aa09bc068f3ce52450342951548d5959520df9060200160405180910390a15050505050505050565b61054260405180608001604052806000151581526020016000815260200160008152602001600081525090565b506000908152600160208181526040928390208351608081018552815460ff16151581529281015491830191909152600281015492820192909252600390910154606082015290565b60008054906101000a90046001600160a01b03166001600160a01b0316636c376cc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156105d757600080fd5b505afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190611754565b1561062c5760405162461bcd60e51b81526004016101b790611a20565b60008054604051637733e61560e11b81528392916001600160a01b03169063ee67cc2a9061065c9060040161199a565b60206040518083038186803b15801561067457600080fd5b505afa158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac919061173a565b6040516308b82a1b60e21b8152600481018490529091506000906001600160a01b038316906322e0a86c9060240160006040518083038186803b1580156106f257600080fd5b505afa158015610706573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072e919081019061176e565b6020810151909150156107535760405162461bcd60e51b81526004016101b7906119c3565b60008054604051637733e61560e11b81523392879290916001600160a01b039091169063ee67cc2a906107889060040161199a565b60206040518083038186803b1580156107a057600080fd5b505afa1580156107b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d8919061173a565b6040516308b82a1b60e21b8152600481018490529091506000906001600160a01b038316906322e0a86c9060240160006040518083038186803b15801561081e57600080fd5b505afa158015610832573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261085a919081019061176e565b9050836001600160a01b031681600001516001600160a01b0316146108915760405162461bcd60e51b81526004016101b790611963565b60008881526001602052604090205460ff166108bf5760405162461bcd60e51b81526004016101b790611a62565b600088815260016020819052604090912001544210156104ce5760405162461bcd60e51b815260206004820152602d60248201527f53746172205365656b6572733a20536b696c6c20686173206e6f742066696e6960448201526c7368656420747261696e696e6760981b60648201526084016101b7565b60008054906101000a90046001600160a01b03166001600160a01b0316636c376cc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561098357600080fd5b505afa158015610997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bb9190611754565b156109d85760405162461bcd60e51b81526004016101b790611a20565b60008054604051637733e61560e11b81528492916001600160a01b03169063ee67cc2a90610a089060040161199a565b60206040518083038186803b158015610a2057600080fd5b505afa158015610a34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a58919061173a565b6040516308b82a1b60e21b8152600481018490529091506000906001600160a01b038316906322e0a86c9060240160006040518083038186803b158015610a9e57600080fd5b505afa158015610ab2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ada919081019061176e565b602081015190915015610aff5760405162461bcd60e51b81526004016101b7906119c3565b60008054604051637733e61560e11b81523392889290916001600160a01b039091169063ee67cc2a90610b349060040161199a565b60206040518083038186803b158015610b4c57600080fd5b505afa158015610b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b84919061173a565b6040516308b82a1b60e21b8152600481018490529091506000906001600160a01b038316906322e0a86c9060240160006040518083038186803b158015610bca57600080fd5b505afa158015610bde573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c06919081019061176e565b9050836001600160a01b031681600001516001600160a01b031614610c3d5760405162461bcd60e51b81526004016101b790611963565b60008981526001602052604090205460ff1615610caa5760405162461bcd60e51b815260206004820152602560248201527f53746172205365656b6572733a20416c7265616479206c6561726e696e67207360448201526435b4b6361760d91b60648201526084016101b7565b60008054604051637733e61560e11b8152602060048201526006602482015265536b696c6c7360d01b60448201526001600160a01b039091169063ee67cc2a9060640160206040518083038186803b158015610d0557600080fd5b505afa158015610d19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3d919061173a565b604051630b81464560e31b8152600481018b90529091506000906001600160a01b03831690635c0a322890602401600060405180830381600087803b158015610d8557600080fd5b505af1158015610d99573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dc19190810190611810565b9050610dcd818c611025565b5060008b815260016020526040902042600390910155610ded818c611146565b610df79042611b61565b60008c81526001602081815260409283902080830194909455835460ff1916909117835560029092018c9055518c81527fcea852c4a4cc5ad56c67fe9cc69aa09bc068f3ce52450342951548d5959520df910160405180910390a15050505050505050505050565b6040805180820182526000808252602091820181905284815260028252828120848252825282902082518084019093528054835260010154908201525b92915050565b60008054604051637733e61560e11b8152602060048201526006602482015265536b696c6c7360d01b604482015282916001600160a01b03169063ee67cc2a9060640160206040518083038186803b158015610efd57600080fd5b505afa158015610f11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f35919061173a565b600084815260016020526040808220600201549051630b81464560e31b81526004810191909152919250906001600160a01b03831690635c0a322890602401600060405180830381600087803b158015610f8e57600080fd5b505af1158015610fa2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fca9190810190611810565b9050610fd68185611313565b60008581526002602081815260408084206001808452828620948501805487529184529185209590955597835287905260038101829055808701829055805460ff191690559055509192915050565b600081815260026020908152604080832060e086015184529091528120600101546005116110a05760405162461bcd60e51b815260206004820152602260248201527f53746172205365656b6572733a20536b696c6c20616c7265616479206174206d6044820152610c2f60f31b60648201526084016101b7565b82511561113d57600082815260026020908152604080832060a0870151845290915290206001015460051461113d5760405162461bcd60e51b815260206004820152603e60248201527f536b696c6c205365656b6572733a20446570656e64656e7420736b696c6c206d60448201527f757374206265206c6576656c2035206265666f726520747261696e696e67000060648201526084016101b7565b50600192915050565b60008054604051637733e61560e11b815282916001600160a01b03169063ee67cc2a906111759060040161199a565b60206040518083038186803b15801561118d57600080fd5b505afa1580156111a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c5919061173a565b60208501516040516312a1496760e31b81529192506000916001600160a01b0384169163950a4b38916111fc918891600401611ab1565b60206040518083038186803b15801561121457600080fd5b505afa158015611228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124c919061192a565b90506000826001600160a01b031663950a4b388688604001516040518363ffffffff1660e01b8152600401611282929190611ab1565b60206040518083038186803b15801561129a57600080fd5b505afa1580156112ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d2919061192a565b905060006112e287878585611513565b905060006112f08484611596565b90506112fc8183611b79565b61130790603c611c78565b98975050505050505050565b6000818152600160208190526040822060038101549101544290838183111561135357603c6113428584611c97565b61134c9190611cae565b905061136c565b603c61135f8585611c97565b6113699190611cae565b90505b60008054604051637733e61560e11b81526001600160a01b039091169063ee67cc2a9061139b9060040161199a565b60206040518083038186803b1580156113b357600080fd5b505afa1580156113c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113eb919061173a565b905060006114fa826001600160a01b031663950a4b388a8c602001516040518363ffffffff1660e01b8152600401611424929190611ab1565b60206040518083038186803b15801561143c57600080fd5b505afa158015611450573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611474919061192a565b6040808c015190516312a1496760e31b81526001600160a01b0386169163950a4b38916114a5918e91600401611ab1565b60206040518083038186803b1580156114bd57600080fd5b505afa1580156114d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f5919061192a565b611596565b90506115068184611c78565b9998505050505050505050565b6000611520600283611b79565b61152a9084611b61565b600085815260026020818152604080842060e08b0180518652818452828620546101008d01518c885295855290518652925290922060019081015461157992916115749190611b61565b6115d7565b6115839190611c97565b61158d9190611b79565b95945050505050565b600060046115a5836001611c78565b6115af9190611b79565b60026115bc856001611c78565b6115c69190611b79565b6115d09190611b61565b9392505050565b60006115e4600183611c97565b6115ef906006611bd0565b6115fa8460fa611c78565b6115d09190611c78565b80516001600160a01b038116811461161b57600080fd5b919050565b600082601f830112611630578081fd5b60405160a0810181811067ffffffffffffffff8211171561165357611653611cee565b604052808360a08101861015611667578384fd5b835b6005811015611688578151835260209283019290910190600101611669565b509195945050505050565b8051801515811461161b57600080fd5b80516005811061161b57600080fd5b600082601f8301126116c2578081fd5b815167ffffffffffffffff8111156116dc576116dc611cee565b60206116f0601f8301601f19168201611b30565b8281528582848701011115611703578384fd5b835b83811015611720578581018301518282018401528201611705565b8381111561173057848385840101525b5095945050505050565b60006020828403121561174b578081fd5b6115d082611604565b600060208284031215611765578081fd5b6115d082611693565b60006020828403121561177f578081fd5b815167ffffffffffffffff80821115611796578283fd5b9083019060a082860312156117a9578283fd5b6117b1611ae3565b6117ba83611604565b81526117c860208401611693565b60208201526040830151828111156117de578485fd5b6117ea878286016116b2565b604083015250606083015160608201526080830151608082015280935050505092915050565b600060208284031215611821578081fd5b815167ffffffffffffffff80821115611838578283fd5b908301906101c0828603121561184c578283fd5b611854611b0c565b61185d83611693565b815261186b602084016116a3565b602082015261187c604084016116a3565b6040820152606083015182811115611892578485fd5b61189e878286016116b2565b6060830152506080830151828111156118b5578485fd5b6118c1878286016116b2565b60808301525060a083015160a082015260c083015160c082015260e083015160e082015261010091508183015182820152610120915061190386838501611620565b91810191909152949350505050565b600060208284031215611923578081fd5b5035919050565b60006020828403121561193b578081fd5b5051919050565b60008060408385031215611954578081fd5b50508035926020909101359150565b6020808252601e908201527f53746172205365656b6572733a20436c6f6e65206f776e6572206f6e6c790000604082015260600190565b6020808252600f908201526e436c6f6e696e67466163696c69747960881b604082015260600190565b6020808252603b908201527f53746172205365656b6572733a2043616e277420636f6d706c6574652061637460408201527f696f6e207768696c6520636c6f6e6520697320666f722073616c650000000000606082015260800190565b60208082526022908201527f53746172205365656b6572733a20446f776e20666f72204d61696e74656e616e604082015261636560f01b606082015260800190565b6020808252602f908201527f53746172205365656b6572733a204e6f742063757272656e746c79207472616960408201526e6e696e6720616e7920736b696c6c7360881b606082015260800190565b8281526040810160058310611ad657634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b60405160a0810167ffffffffffffffff81118282101715611b0657611b06611cee565b60405290565b604051610140810167ffffffffffffffff81118282101715611b0657611b06611cee565b604051601f8201601f1916810167ffffffffffffffff81118282101715611b5957611b59611cee565b604052919050565b60008219821115611b7457611b74611cc2565b500190565b600082611b8857611b88611cd8565b500490565b600181815b80851115611bc8578160001904821115611bae57611bae611cc2565b80851615611bbb57918102915b93841c9390800290611b92565b509250929050565b60006115d08383600082611be657506001610e9c565b81611bf357506000610e9c565b8160018114611c095760028114611c1357611c2f565b6001915050610e9c565b60ff841115611c2457611c24611cc2565b50506001821b610e9c565b5060208310610133831016604e8410600b8410161715611c52575081810a610e9c565b611c5c8383611b8d565b8060001904821115611c7057611c70611cc2565b029392505050565b6000816000190483118215151615611c9257611c92611cc2565b500290565b600082821015611ca957611ca9611cc2565b500390565b600082611cbd57611cbd611cd8565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200100b198aa6d5baddb3f23e032d5835bda75445b530c50a7831c04c8e7694c4364736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80631329cc001461005c578063474d20021461007157806348d917ef146100c257806349b9e5bd146100d5578063b7aab30d146100e8575b600080fd5b61006f61006a366004611912565b610116565b005b61008461007f366004611912565b610515565b6040516100b9919081511515815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b61006f6100d0366004611912565b61058b565b61006f6100e3366004611942565b610937565b6100fb6100f6366004611942565b610e5f565b604080518251815260209283015192810192909252016100b9565b60008054906101000a90046001600160a01b03166001600160a01b0316636c376cc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561016257600080fd5b505afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a9190611754565b156101c05760405162461bcd60e51b81526004016101b790611a20565b60405180910390fd5b60008054604051637733e61560e11b81528392916001600160a01b03169063ee67cc2a906101f09060040161199a565b60206040518083038186803b15801561020857600080fd5b505afa15801561021c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610240919061173a565b6040516308b82a1b60e21b8152600481018490529091506000906001600160a01b038316906322e0a86c9060240160006040518083038186803b15801561028657600080fd5b505afa15801561029a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c2919081019061176e565b6020810151909150156102e75760405162461bcd60e51b81526004016101b7906119c3565b60008054604051637733e61560e11b81523392879290916001600160a01b039091169063ee67cc2a9061031c9060040161199a565b60206040518083038186803b15801561033457600080fd5b505afa158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c919061173a565b6040516308b82a1b60e21b8152600481018490529091506000906001600160a01b038316906322e0a86c9060240160006040518083038186803b1580156103b257600080fd5b505afa1580156103c6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ee919081019061176e565b9050836001600160a01b031681600001516001600160a01b0316146104255760405162461bcd60e51b81526004016101b790611963565b60008881526001602052604090205460ff166104535760405162461bcd60e51b81526004016101b790611a62565b6000888152600160208190526040909120015442106104ce5760405162461bcd60e51b815260206004820152603160248201527f53746172205365656b6572733a20536b696c6c2068617320616c72656164792060448201527066696e697368656420747261696e696e6760781b60648201526084016101b7565b6104d788610ea2565b506040518881527fcea852c4a4cc5ad56c67fe9cc69aa09bc068f3ce52450342951548d5959520df9060200160405180910390a15050505050505050565b61054260405180608001604052806000151581526020016000815260200160008152602001600081525090565b506000908152600160208181526040928390208351608081018552815460ff16151581529281015491830191909152600281015492820192909252600390910154606082015290565b60008054906101000a90046001600160a01b03166001600160a01b0316636c376cc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156105d757600080fd5b505afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190611754565b1561062c5760405162461bcd60e51b81526004016101b790611a20565b60008054604051637733e61560e11b81528392916001600160a01b03169063ee67cc2a9061065c9060040161199a565b60206040518083038186803b15801561067457600080fd5b505afa158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac919061173a565b6040516308b82a1b60e21b8152600481018490529091506000906001600160a01b038316906322e0a86c9060240160006040518083038186803b1580156106f257600080fd5b505afa158015610706573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072e919081019061176e565b6020810151909150156107535760405162461bcd60e51b81526004016101b7906119c3565b60008054604051637733e61560e11b81523392879290916001600160a01b039091169063ee67cc2a906107889060040161199a565b60206040518083038186803b1580156107a057600080fd5b505afa1580156107b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d8919061173a565b6040516308b82a1b60e21b8152600481018490529091506000906001600160a01b038316906322e0a86c9060240160006040518083038186803b15801561081e57600080fd5b505afa158015610832573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261085a919081019061176e565b9050836001600160a01b031681600001516001600160a01b0316146108915760405162461bcd60e51b81526004016101b790611963565b60008881526001602052604090205460ff166108bf5760405162461bcd60e51b81526004016101b790611a62565b600088815260016020819052604090912001544210156104ce5760405162461bcd60e51b815260206004820152602d60248201527f53746172205365656b6572733a20536b696c6c20686173206e6f742066696e6960448201526c7368656420747261696e696e6760981b60648201526084016101b7565b60008054906101000a90046001600160a01b03166001600160a01b0316636c376cc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561098357600080fd5b505afa158015610997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bb9190611754565b156109d85760405162461bcd60e51b81526004016101b790611a20565b60008054604051637733e61560e11b81528492916001600160a01b03169063ee67cc2a90610a089060040161199a565b60206040518083038186803b158015610a2057600080fd5b505afa158015610a34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a58919061173a565b6040516308b82a1b60e21b8152600481018490529091506000906001600160a01b038316906322e0a86c9060240160006040518083038186803b158015610a9e57600080fd5b505afa158015610ab2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ada919081019061176e565b602081015190915015610aff5760405162461bcd60e51b81526004016101b7906119c3565b60008054604051637733e61560e11b81523392889290916001600160a01b039091169063ee67cc2a90610b349060040161199a565b60206040518083038186803b158015610b4c57600080fd5b505afa158015610b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b84919061173a565b6040516308b82a1b60e21b8152600481018490529091506000906001600160a01b038316906322e0a86c9060240160006040518083038186803b158015610bca57600080fd5b505afa158015610bde573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c06919081019061176e565b9050836001600160a01b031681600001516001600160a01b031614610c3d5760405162461bcd60e51b81526004016101b790611963565b60008981526001602052604090205460ff1615610caa5760405162461bcd60e51b815260206004820152602560248201527f53746172205365656b6572733a20416c7265616479206c6561726e696e67207360448201526435b4b6361760d91b60648201526084016101b7565b60008054604051637733e61560e11b8152602060048201526006602482015265536b696c6c7360d01b60448201526001600160a01b039091169063ee67cc2a9060640160206040518083038186803b158015610d0557600080fd5b505afa158015610d19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3d919061173a565b604051630b81464560e31b8152600481018b90529091506000906001600160a01b03831690635c0a322890602401600060405180830381600087803b158015610d8557600080fd5b505af1158015610d99573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dc19190810190611810565b9050610dcd818c611025565b5060008b815260016020526040902042600390910155610ded818c611146565b610df79042611b61565b60008c81526001602081815260409283902080830194909455835460ff1916909117835560029092018c9055518c81527fcea852c4a4cc5ad56c67fe9cc69aa09bc068f3ce52450342951548d5959520df910160405180910390a15050505050505050505050565b6040805180820182526000808252602091820181905284815260028252828120848252825282902082518084019093528054835260010154908201525b92915050565b60008054604051637733e61560e11b8152602060048201526006602482015265536b696c6c7360d01b604482015282916001600160a01b03169063ee67cc2a9060640160206040518083038186803b158015610efd57600080fd5b505afa158015610f11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f35919061173a565b600084815260016020526040808220600201549051630b81464560e31b81526004810191909152919250906001600160a01b03831690635c0a322890602401600060405180830381600087803b158015610f8e57600080fd5b505af1158015610fa2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fca9190810190611810565b9050610fd68185611313565b60008581526002602081815260408084206001808452828620948501805487529184529185209590955597835287905260038101829055808701829055805460ff191690559055509192915050565b600081815260026020908152604080832060e086015184529091528120600101546005116110a05760405162461bcd60e51b815260206004820152602260248201527f53746172205365656b6572733a20536b696c6c20616c7265616479206174206d6044820152610c2f60f31b60648201526084016101b7565b82511561113d57600082815260026020908152604080832060a0870151845290915290206001015460051461113d5760405162461bcd60e51b815260206004820152603e60248201527f536b696c6c205365656b6572733a20446570656e64656e7420736b696c6c206d60448201527f757374206265206c6576656c2035206265666f726520747261696e696e67000060648201526084016101b7565b50600192915050565b60008054604051637733e61560e11b815282916001600160a01b03169063ee67cc2a906111759060040161199a565b60206040518083038186803b15801561118d57600080fd5b505afa1580156111a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c5919061173a565b60208501516040516312a1496760e31b81529192506000916001600160a01b0384169163950a4b38916111fc918891600401611ab1565b60206040518083038186803b15801561121457600080fd5b505afa158015611228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124c919061192a565b90506000826001600160a01b031663950a4b388688604001516040518363ffffffff1660e01b8152600401611282929190611ab1565b60206040518083038186803b15801561129a57600080fd5b505afa1580156112ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d2919061192a565b905060006112e287878585611513565b905060006112f08484611596565b90506112fc8183611b79565b61130790603c611c78565b98975050505050505050565b6000818152600160208190526040822060038101549101544290838183111561135357603c6113428584611c97565b61134c9190611cae565b905061136c565b603c61135f8585611c97565b6113699190611cae565b90505b60008054604051637733e61560e11b81526001600160a01b039091169063ee67cc2a9061139b9060040161199a565b60206040518083038186803b1580156113b357600080fd5b505afa1580156113c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113eb919061173a565b905060006114fa826001600160a01b031663950a4b388a8c602001516040518363ffffffff1660e01b8152600401611424929190611ab1565b60206040518083038186803b15801561143c57600080fd5b505afa158015611450573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611474919061192a565b6040808c015190516312a1496760e31b81526001600160a01b0386169163950a4b38916114a5918e91600401611ab1565b60206040518083038186803b1580156114bd57600080fd5b505afa1580156114d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f5919061192a565b611596565b90506115068184611c78565b9998505050505050505050565b6000611520600283611b79565b61152a9084611b61565b600085815260026020818152604080842060e08b0180518652818452828620546101008d01518c885295855290518652925290922060019081015461157992916115749190611b61565b6115d7565b6115839190611c97565b61158d9190611b79565b95945050505050565b600060046115a5836001611c78565b6115af9190611b79565b60026115bc856001611c78565b6115c69190611b79565b6115d09190611b61565b9392505050565b60006115e4600183611c97565b6115ef906006611bd0565b6115fa8460fa611c78565b6115d09190611c78565b80516001600160a01b038116811461161b57600080fd5b919050565b600082601f830112611630578081fd5b60405160a0810181811067ffffffffffffffff8211171561165357611653611cee565b604052808360a08101861015611667578384fd5b835b6005811015611688578151835260209283019290910190600101611669565b509195945050505050565b8051801515811461161b57600080fd5b80516005811061161b57600080fd5b600082601f8301126116c2578081fd5b815167ffffffffffffffff8111156116dc576116dc611cee565b60206116f0601f8301601f19168201611b30565b8281528582848701011115611703578384fd5b835b83811015611720578581018301518282018401528201611705565b8381111561173057848385840101525b5095945050505050565b60006020828403121561174b578081fd5b6115d082611604565b600060208284031215611765578081fd5b6115d082611693565b60006020828403121561177f578081fd5b815167ffffffffffffffff80821115611796578283fd5b9083019060a082860312156117a9578283fd5b6117b1611ae3565b6117ba83611604565b81526117c860208401611693565b60208201526040830151828111156117de578485fd5b6117ea878286016116b2565b604083015250606083015160608201526080830151608082015280935050505092915050565b600060208284031215611821578081fd5b815167ffffffffffffffff80821115611838578283fd5b908301906101c0828603121561184c578283fd5b611854611b0c565b61185d83611693565b815261186b602084016116a3565b602082015261187c604084016116a3565b6040820152606083015182811115611892578485fd5b61189e878286016116b2565b6060830152506080830151828111156118b5578485fd5b6118c1878286016116b2565b60808301525060a083015160a082015260c083015160c082015260e083015160e082015261010091508183015182820152610120915061190386838501611620565b91810191909152949350505050565b600060208284031215611923578081fd5b5035919050565b60006020828403121561193b578081fd5b5051919050565b60008060408385031215611954578081fd5b50508035926020909101359150565b6020808252601e908201527f53746172205365656b6572733a20436c6f6e65206f776e6572206f6e6c790000604082015260600190565b6020808252600f908201526e436c6f6e696e67466163696c69747960881b604082015260600190565b6020808252603b908201527f53746172205365656b6572733a2043616e277420636f6d706c6574652061637460408201527f696f6e207768696c6520636c6f6e6520697320666f722073616c650000000000606082015260800190565b60208082526022908201527f53746172205365656b6572733a20446f776e20666f72204d61696e74656e616e604082015261636560f01b606082015260800190565b6020808252602f908201527f53746172205365656b6572733a204e6f742063757272656e746c79207472616960408201526e6e696e6720616e7920736b696c6c7360881b606082015260800190565b8281526040810160058310611ad657634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b60405160a0810167ffffffffffffffff81118282101715611b0657611b06611cee565b60405290565b604051610140810167ffffffffffffffff81118282101715611b0657611b06611cee565b604051601f8201601f1916810167ffffffffffffffff81118282101715611b5957611b59611cee565b604052919050565b60008219821115611b7457611b74611cc2565b500190565b600082611b8857611b88611cd8565b500490565b600181815b80851115611bc8578160001904821115611bae57611bae611cc2565b80851615611bbb57918102915b93841c9390800290611b92565b509250929050565b60006115d08383600082611be657506001610e9c565b81611bf357506000610e9c565b8160018114611c095760028114611c1357611c2f565b6001915050610e9c565b60ff841115611c2457611c24611cc2565b50506001821b610e9c565b5060208310610133831016604e8410600b8410161715611c52575081810a610e9c565b611c5c8383611b8d565b8060001904821115611c7057611c70611cc2565b029392505050565b6000816000190483118215151615611c9257611c92611cc2565b500290565b600082821015611ca957611ca9611cc2565b500390565b600082611cbd57611cbd611cd8565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200100b198aa6d5baddb3f23e032d5835bda75445b530c50a7831c04c8e7694c4364736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "completeLearning(uint256)": {
        "details": "can only be called when game is not in maintenance, the clone is not for sale, and only the clone owner.",
        "params": {
          "_cloneId": "the clone id to complete learning on"
        }
      },
      "getLearningLog(uint256,uint256)": {
        "params": {
          "_cloneId": "the clone id to retrieve",
          "_skillId": "the skill id of the skill to retrieve the learning log of."
        },
        "returns": {
          "_0": "LearningLog"
        }
      },
      "getLearningState(uint256)": {
        "params": {
          "_cloneId": "the clone id to retrieve"
        },
        "returns": {
          "_0": "LearningState"
        }
      },
      "startLearning(uint256,uint256)": {
        "details": "can only be called when game is not in maintenance, the clone is not for sale, and only the clone owner.",
        "params": {
          "_cloneId": "clone id to start training on",
          "_skillId": "skill id to start training on"
        }
      },
      "stopLearning(uint256)": {
        "details": "can only be called when game is not in maintenance, the clone is not for sale, and only the clone owner.",
        "params": {
          "_cloneId": "the clone id to complete learning on"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "LearningStateUpdated(uint256)": {
        "notice": "emitted any time we update the learning state"
      }
    },
    "kind": "user",
    "methods": {
      "completeLearning(uint256)": {
        "notice": "after training has completed call this function to update state"
      },
      "getLearningLog(uint256,uint256)": {
        "notice": "retrieve a clones learning log for a specific skill"
      },
      "getLearningState(uint256)": {
        "notice": "get the learning state of a specific clone"
      },
      "startLearning(uint256,uint256)": {
        "notice": "start training on a specific clone"
      },
      "stopLearning(uint256)": {
        "notice": "stop training on a skill that's still in training"
      }
    },
    "notice": "this contract serves as the central location for clone s",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12760,
        "contract": "src/Learning.sol:Learning",
        "label": "gameManager",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(GameManager)11452"
      },
      {
        "astId": 11476,
        "contract": "src/Learning.sol:Learning",
        "label": "learningState",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(LearningState)11470_storage)"
      },
      {
        "astId": 11489,
        "contract": "src/Learning.sol:Learning",
        "label": "learningLog",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(LearningLog)11481_storage))"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(GameManager)11452": {
        "encoding": "inplace",
        "label": "contract GameManager",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(LearningLog)11481_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct Learning.LearningLog))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(LearningLog)11481_storage)"
      },
      "t_mapping(t_uint256,t_struct(LearningLog)11481_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Learning.LearningLog)",
        "numberOfBytes": "32",
        "value": "t_struct(LearningLog)11481_storage"
      },
      "t_mapping(t_uint256,t_struct(LearningState)11470_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Learning.LearningState)",
        "numberOfBytes": "32",
        "value": "t_struct(LearningState)11470_storage"
      },
      "t_struct(LearningLog)11481_storage": {
        "encoding": "inplace",
        "label": "struct Learning.LearningLog",
        "members": [
          {
            "astId": 11478,
            "contract": "src/Learning.sol:Learning",
            "label": "learning_points",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 11480,
            "contract": "src/Learning.sol:Learning",
            "label": "skill_level",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(LearningState)11470_storage": {
        "encoding": "inplace",
        "label": "struct Learning.LearningState",
        "members": [
          {
            "astId": 11463,
            "contract": "src/Learning.sol:Learning",
            "label": "is_learning",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 11465,
            "contract": "src/Learning.sol:Learning",
            "label": "end_time",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 11467,
            "contract": "src/Learning.sol:Learning",
            "label": "learning",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 11469,
            "contract": "src/Learning.sol:Learning",
            "label": "start_time",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
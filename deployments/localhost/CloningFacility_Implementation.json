{
  "address": "0x71F043a9072b5ec430C0a1DD766E1C8C613eDc5d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gameManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cloneId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "CloneCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_cloneId",
          "type": "uint256"
        }
      ],
      "name": "changeOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cloneId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_forSale",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "changeSalesState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cloneId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "changeUri",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cloneId",
          "type": "uint256"
        },
        {
          "internalType": "enum IStats.Stat",
          "name": "_stat",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "decreaseStat",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cloneId",
          "type": "uint256"
        }
      ],
      "name": "getCloneData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "for_sale",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct CloningFacility.CloneData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cloneId",
          "type": "uint256"
        },
        {
          "internalType": "enum IStats.Stat",
          "name": "_stat",
          "type": "uint8"
        }
      ],
      "name": "getCloneStatLevel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cloneId",
          "type": "uint256"
        }
      ],
      "name": "getCloneUri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cloneId",
          "type": "uint256"
        },
        {
          "internalType": "enum IStats.Stat",
          "name": "_stat",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "increaseStat",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x768902ba9be7418befe776cab498a83381d3de348f3595111cf4b3fbe9506d0e",
  "receipt": {
    "to": null,
    "from": "0x90F79bf6EB2c4f870365E785982E1f101E93b906",
    "contractAddress": "0x71F043a9072b5ec430C0a1DD766E1C8C613eDc5d",
    "transactionIndex": 0,
    "gasUsed": "1504653",
    "logsBloom": "0x
    "blockHash": "0xb7309962926281d187aff02ac6e9d81930daeb952d9ae1e0e11a3bfbb66b2745",
    "transactionHash": "0x768902ba9be7418befe776cab498a83381d3de348f3595111cf4b3fbe9506d0e",
    "logs": [],
    "blockNumber": 9611958,
    "cumulativeGasUsed": "1504653",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x261D8c5e9742e6f7f1076Fa1F560894524e19cad"
  ],
  "numDeployments": 1,
  "solcInputHash": "dbed9630ff08f62ad5e23a1d6a18ff67",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gameManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cloneId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CloneCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cloneId\",\"type\":\"uint256\"}],\"name\":\"changeOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cloneId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changeSalesState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cloneId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"changeUri\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cloneId\",\"type\":\"uint256\"},{\"internalType\":\"enum IStats.Stat\",\"name\":\"_stat\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"decreaseStat\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cloneId\",\"type\":\"uint256\"}],\"name\":\"getCloneData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"for_sale\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct CloningFacility.CloneData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cloneId\",\"type\":\"uint256\"},{\"internalType\":\"enum IStats.Stat\",\"name\":\"_stat\",\"type\":\"uint8\"}],\"name\":\"getCloneStatLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cloneId\",\"type\":\"uint256\"}],\"name\":\"getCloneUri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cloneId\",\"type\":\"uint256\"},{\"internalType\":\"enum IStats.Stat\",\"name\":\"_stat\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseStat\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeOwner(address,uint256)\":{\"details\":\"should only be callable by other game contracts\",\"params\":{\"_cloneId\":\"cloneId of the\",\"_newOwner\":\"address of the new owner\"},\"returns\":{\"_0\":\"bool success\"}},\"changeSalesState(uint256,bool,uint256)\":{\"details\":\"should only be callable by other game contracts\",\"params\":{\"_cloneId\":\"uint256 clone id\",\"_forSale\":\"bool sale state\",\"_price\":\"uint256 price of clone\"},\"returns\":{\"_0\":\"bool success\"}},\"changeUri(uint256,string)\":{\"details\":\"should only be callable by other game contracts\",\"params\":{\"_cloneId\":\"uint256 cloneId\",\"_uri\":\"string ipfs url for json endpoint\"}},\"create(string)\":{\"details\":\"gets the price of the chains base token from chainlink\",\"params\":{\"_uri\":\"json IPFS endpoint\"}},\"decreaseStat(uint256,uint8,uint256)\":{\"details\":\"should only be callable by other game contracts\",\"params\":{\"_amount\":\"uin256 amount to decrease stat by\",\"_cloneId\":\"clone id\",\"_stat\":\"stat enum\"},\"returns\":{\"_0\":\"bool success\"}},\"getCloneData(uint256)\":{\"details\":\"should only be callable by other game contracts\",\"params\":{\"_cloneId\":\"uint256 cloneId\"},\"returns\":{\"_0\":\"CloneData struct\"}},\"getCloneStatLevel(uint256,uint8)\":{\"details\":\"should only be callable by other game contracts\",\"params\":{\"_cloneId\":\"clone id\",\"_stat\":\"clone stat to retrieve level of\"},\"returns\":{\"_0\":\"uint256 clone stat level\"}},\"getCloneUri(uint256)\":{\"details\":\"should be IPFS JSON endpoint\",\"params\":{\"_cloneId\":\"clone id\"},\"returns\":{\"_0\":\"string clone uri\"}},\"increaseStat(uint256,uint8,uint256)\":{\"details\":\"should only be callable by other game contracts\",\"params\":{\"_amount\":\"uin256 amount to increase stat by\",\"_cloneId\":\"clone id\",\"_stat\":\"stat enum\"},\"returns\":{\"_0\":\"bool success\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeOwner(address,uint256)\":{\"notice\":\"changes the owner of a given clone to the given address\"},\"changeSalesState(uint256,bool,uint256)\":{\"notice\":\"changes the owner of a given clone to the given address\"},\"changeUri(uint256,string)\":{\"notice\":\"changes the uri for a given clone id\"},\"create(string)\":{\"notice\":\"Creates a new clone\"},\"decreaseStat(uint256,uint8,uint256)\":{\"notice\":\"decreases a clones stat by the given amount\"},\"getCloneData(uint256)\":{\"notice\":\"changes the uri for a given clone id\"},\"getCloneStatLevel(uint256,uint8)\":{\"notice\":\"gets the level for a specific stat on a specific clone\"},\"getCloneUri(uint256)\":{\"notice\":\"gets clone URI\"},\"increaseStat(uint256,uint8,uint256)\":{\"notice\":\"increases a clones stat by the given amount\"}},\"notice\":\"this contract serves as the central location for clone s\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CloningFacility.sol\":\"CloningFacility\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\"},\"src/CloningFacility.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/UniversalData.sol\\\";\\nimport \\\"./interfaces/IClone.sol\\\";\\nimport \\\"./interfaces/IStats.sol\\\";\\nimport \\\"./interfaces/ICRED.sol\\\";\\nimport \\\"./interfaces/IChainlinkAggregator.sol\\\";\\n\\n/// @notice this contract serves as the central location for clone s\\ncontract CloningFacility is UniversalData {\\n    struct CloneData {\\n        address owner;\\n        bool for_sale;\\n        string uri; // IPFS url\\n        uint256 price;\\n        uint256 id;\\n    }\\n\\n    /// @notice cloneData[cloneId] => CloneData struct\\n    mapping(uint256 => CloneData) cloneData;\\n    /// @notice clonesOwnedByAddress[playerWalletAddress] => array[cloneId]\\n    mapping(address => uint256[]) clonesOwnedByAddress;\\n    /// @notice stats[cloneId][Stat.stat] => statLevel\\n    mapping(uint256 => mapping(IStats.Stat => uint256)) stats;\\n\\n    event CloneCreated(uint256 cloneId, address owner);\\n\\n    constructor(address _gameManager) UniversalData(_gameManager) {}\\n\\n    /// @notice Creates a new clone\\n    /// @dev gets the price of the chains base token from chainlink\\n    /// @param _uri json IPFS endpoint\\n    function create(string memory _uri) public payable notInMaintenance {\\n        require(\\n            gameManager.chainlinkFeed() != address(0),\\n            \\\"Star Seekers: No chainlink feed set\\\"\\n        );\\n        ICred cred = ICred(gameManager.contractAddresses(\\\"CRED\\\"));\\n\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            gameManager.chainlinkFeed()\\n        );\\n        (, int256 purchaseTokenUsdPrice, , , ) = priceFeed.latestRoundData();\\n\\n        uint256 cloneCostInBaseToken = gameManager.cloneCost() /\\n            uint256(purchaseTokenUsdPrice);\\n        require(\\n            msg.value >= cloneCostInBaseToken,\\n            \\\"Star Seekers: Invalid payment amount\\\"\\n        );\\n\\n        (bool sent, ) = payable(address(this)).call{value: msg.value}(\\\"\\\");\\n        require(sent, \\\"Star Seekers: Failed to send payment token\\\");\\n\\n        uint256 newCloneId = IClone(gameManager.contractAddresses(\\\"Clone\\\"))\\n            .create(msg.sender);\\n\\n        CloneData memory data = CloneData({\\n            owner: msg.sender,\\n            for_sale: false,\\n            uri: _uri, // IPFS json endpoint\\n            price: 0,\\n            id: newCloneId\\n        });\\n\\n        cloneData[newCloneId] = data;\\n        clonesOwnedByAddress[msg.sender].push(data.id);\\n\\n        if (\\n            gameManager.startingCred() > 0 &&\\n            gameManager.hasReceivedStartingCred(msg.sender) == false\\n        ) {\\n            cred.mint(msg.sender, gameManager.startingCred());\\n            gameManager.updateHasReceivedStartingCred(msg.sender);\\n        }\\n\\n        emit CloneCreated(newCloneId, msg.sender);\\n    }\\n\\n    /// @notice changes the uri for a given clone id\\n    /// @dev should only be callable by other game contracts\\n    /// @param _cloneId uint256 cloneId\\n    /// @return CloneData struct\\n    function getCloneData(uint256 _cloneId)\\n        public\\n        view\\n        returns (CloneData memory)\\n    {\\n        return cloneData[_cloneId];\\n    }\\n\\n    /// @notice gets the level for a specific stat on a specific clone\\n    /// @dev should only be callable by other game contracts\\n    /// @param _cloneId clone id\\n    /// @param _stat clone stat to retrieve level of\\n    /// @return uint256 clone stat level\\n    function getCloneStatLevel(uint256 _cloneId, IStats.Stat _stat)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return stats[_cloneId][_stat];\\n    }\\n\\n    /// @notice gets clone URI\\n    /// @dev should be IPFS JSON endpoint\\n    /// @param _cloneId clone id\\n    /// @return string clone uri\\n    function getCloneUri(uint256 _cloneId) public view returns (string memory) {\\n        string memory uri = cloneData[_cloneId].uri;\\n        return uri;\\n    }\\n\\n    /// @notice changes the owner of a given clone to the given address\\n    /// @dev should only be callable by other game contracts\\n    /// @param _newOwner address of the new owner\\n    /// @param _cloneId cloneId of the\\n    /// @return bool success\\n    function changeOwner(address _newOwner, uint256 _cloneId)\\n        external\\n        onlyGameContract\\n        returns (bool)\\n    {\\n        uint256[] memory clones = clonesOwnedByAddress[\\n            cloneData[_cloneId].owner\\n        ];\\n\\n        for (uint256 i = 0; i <= clones.length; i += 1) {\\n            if (clones[i] == _cloneId) {\\n                delete clones[i];\\n                clonesOwnedByAddress[cloneData[_cloneId].owner] = clones;\\n            }\\n        }\\n        cloneData[_cloneId].owner = _newOwner;\\n        clonesOwnedByAddress[_newOwner].push(_cloneId);\\n\\n        return true;\\n    }\\n\\n    /// @notice changes the owner of a given clone to the given address\\n    /// @dev should only be callable by other game contracts\\n    /// @param _cloneId uint256 clone id\\n    /// @param _forSale bool sale state\\n    /// @param _price uint256 price of clone\\n    /// @return bool success\\n    function changeSalesState(\\n        uint256 _cloneId,\\n        bool _forSale,\\n        uint256 _price\\n    ) external onlyGameContract returns (bool) {\\n        cloneData[_cloneId].for_sale = _forSale;\\n\\n        cloneData[_cloneId].price = _price;\\n\\n        return true;\\n    }\\n\\n    /// @notice changes the uri for a given clone id\\n    /// @dev should only be callable by other game contracts\\n    /// @param _cloneId uint256 cloneId\\n    /// @param _uri string ipfs url for json endpoint\\n    function changeUri(uint256 _cloneId, string memory _uri)\\n        external\\n        onlyGameContract\\n        returns (bool)\\n    {\\n        cloneData[_cloneId].uri = _uri;\\n\\n        return true;\\n    }\\n\\n    /// @notice increases a clones stat by the given amount\\n    /// @dev should only be callable by other game contracts\\n    /// @param _cloneId clone id\\n    /// @param _stat stat enum\\n    /// @param _amount uin256 amount to increase stat by\\n    /// @return bool success\\n    function increaseStat(\\n        uint256 _cloneId,\\n        IStats.Stat _stat,\\n        uint256 _amount\\n    ) external onlyGameContract returns (bool) {\\n        stats[_cloneId][_stat] += _amount;\\n\\n        return true;\\n    }\\n\\n    /// @notice decreases a clones stat by the given amount\\n    /// @dev should only be callable by other game contracts\\n    /// @param _cloneId clone id\\n    /// @param _stat stat enum\\n    /// @param _amount uin256 amount to decrease stat by\\n    /// @return bool success\\n    function decreaseStat(\\n        uint256 _cloneId,\\n        IStats.Stat _stat,\\n        uint256 _amount\\n    ) external onlyGameContract returns (bool) {\\n        stats[_cloneId][_stat] -= _amount;\\n\\n        return true;\\n    }\\n\\n    receive() external payable {\\n        (bool sent, ) = gameManager.federation().call{value: msg.value}(\\\"\\\");\\n        require(sent, \\\"Star Seekers: Failed to send payment token\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x6133292e8ed1115e51a52984602edce35dce701ac49219ad911b86821281e19b\",\"license\":\"GPLv3\"},\"src/GameManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\n\\nimport \\\"hardhat/console.sol\\\";\\n\\ncontract GameManager {\\n    address public admin;\\n    address public chainlinkFeed;\\n    address payable public federation;\\n    bool public maintenance = false;\\n    uint256 public cloneCost = 100; /// usd price\\n    uint256 public salesTax = 5; /// percentage\\n    uint256 public startingCred = 10000;\\n\\n    /// @notice contractAddresses[\\\"ContractName\\\"] => contractAddress\\n    mapping(string => address) public contractAddresses;\\n    /// @notice hasReceivedStartingCred[playerAddress] => boolean\\n    mapping(address => bool) public hasReceivedStartingCred;\\n    /// @notice isGameContract[contractAddress] => boolean\\n    mapping(address => bool) public isGameContract;\\n\\n    /// @notice insures only the admin address can make these changes\\n    modifier onlyAdmin() {\\n        console.log(\\\"modifier\\\", admin);\\n\\n        require(msg.sender == admin, \\\"Star Seekers: Admin only\\\");\\n        _;\\n    }\\n    /// @notice insures only an address registered as a game contract can make these changes\\n    modifier onlyGameContract() {\\n        require(\\n            isGameContract[msg.sender],\\n            \\\"Star Seekers: Not a game contract\\\"\\n        );\\n        _;\\n    }\\n\\n    event AddContract(string name, address contractAddress);\\n    event AdminUpdated(address oldAdmin, address newAdmin);\\n    event RemoveContract(string name, address contractAddress);\\n    event ChainlinkFeedUpdated(address newAddress);\\n    event MaintenanceUpdated(bool status);\\n    event FederationUpdated(address federation);\\n    event SalesTaxUpdated(uint256 amount);\\n    event StartingCredUpdated(uint256 amount);\\n    event ReceivedStartingCred(address player);\\n\\n    constructor(\\n        address _admin,\\n        address _chainlinkFeed,\\n        address payable _federation\\n    ) {\\n        require(_admin != address(0), \\\"Star Seekers: Admin address required\\\");\\n        require(\\n            _chainlinkFeed != address(0),\\n            \\\"Star Seekers: Chainlink Feed address required\\\"\\n        );\\n        require(\\n            _federation != address(0),\\n            \\\"Star Seekers: Federation address required\\\"\\n        );\\n        console.log(\\\"constructor\\\", _admin);\\n\\n        admin = _admin;\\n\\n        console.log(\\\"constructor after set\\\", admin);\\n        chainlinkFeed = _chainlinkFeed;\\n        federation = _federation;\\n    }\\n\\n    /// @notice adds a contract as a registered game contract\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _name contract name used when calling getters.\\n    /// @param _address the address of the contract we're adding to the database\\n    function addContract(string memory _name, address _address)\\n        public\\n        onlyAdmin\\n    {\\n        contractAddresses[_name] = _address;\\n        isGameContract[_address] = true;\\n\\n        emit AddContract(_name, _address);\\n    }\\n\\n    /// @notice changes the admin\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _newAdmin new admin address\\n    function changeAdmin(address _newAdmin) public onlyAdmin {\\n        admin = _newAdmin;\\n\\n        emit AdminUpdated(msg.sender, _newAdmin);\\n    }\\n\\n    /// @notice removes a contract from the database by name\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _name contract name that will be removed from database\\n    function removeContract(string memory _name) public onlyAdmin {\\n        address contractAddress = contractAddresses[_name];\\n        require(\\n            isGameContract[contractAddress],\\n            \\\"Star Seekers: Not a game contract\\\"\\n        );\\n\\n        contractAddresses[_name] = address(0);\\n        isGameContract[contractAddress] = false;\\n\\n        emit RemoveContract(_name, contractAddress);\\n    }\\n\\n    /// @notice changes the feed for chainlink\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _feedContract address of the chainlink feed contract\\n    function setChainlinkFeed(address _feedContract) public onlyAdmin {\\n        chainlinkFeed = _feedContract;\\n\\n        emit ChainlinkFeedUpdated(_feedContract);\\n    }\\n\\n    /// @notice changes the maintenance status\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _status boolean to set maintenance\\n    function setMaintenance(bool _status) public onlyAdmin {\\n        maintenance = _status;\\n\\n        emit MaintenanceUpdated(_status);\\n    }\\n\\n    /// @notice changes federation address\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _newFederationAddress new federation address\\n    function setFederation(address payable _newFederationAddress)\\n        public\\n        onlyAdmin\\n    {\\n        federation = _newFederationAddress;\\n\\n        emit FederationUpdated(federation);\\n    }\\n\\n    /// @notice change sales tax\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _amount amount sales tax will be updated to\\n    function setSalesTax(uint256 _amount) public onlyAdmin {\\n        salesTax = _amount;\\n\\n        emit SalesTaxUpdated(_amount);\\n    }\\n\\n    /// @notice change starting cred amount\\n    /// @dev only the admin address should be able to make this change\\n    /// @param _amount new starting cred amount\\n    function setStartingCred(uint256 _amount) public onlyAdmin {\\n        startingCred = _amount;\\n\\n        emit StartingCredUpdated(_amount);\\n    }\\n\\n    /// @notice sets boolean to true when a wallet has received starting cred for creating a new clone\\n    /// @dev only a game contract should be able to call this function. A player can only receive CRED\\n    /// for the first clone created with that wallet.\\n    /// @param _player address to update\\n    function updateHasReceivedStartingCred(address _player)\\n        external\\n        onlyGameContract\\n    {\\n        hasReceivedStartingCred[_player] = true;\\n\\n        emit ReceivedStartingCred(_player);\\n    }\\n}\\n\",\"keccak256\":\"0xf97078367be23b053c726f4604778d5c0d5bb2cc1870b94a159012c7c9ed800d\",\"license\":\"GPLv3\"},\"src/interfaces/ICRED.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\n\\ninterface ICred {\\n    function mint(address to, uint256 amount) external;\\n\\n    function spend(address account, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xd5f67cac6ef21ae2f364012b1cc27a2f18fb898ca3d5134533461b095ef45930\",\"license\":\"GPLv3\"},\"src/interfaces/IChainlinkAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x18fb68de95136c49f3874fe7795a7bda730339198b2816690ddbdf1eacd4e273\",\"license\":\"MIT\"},\"src/interfaces/IClone.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\n\\ninterface IClone {\\n    function create(address owner) external returns (uint256);\\n\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(\\n        address indexed from,\\n        address indexed to,\\n        uint256 indexed tokenId\\n    );\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed approved,\\n        uint256 indexed tokenId\\n    );\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId)\\n        external\\n        view\\n        returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8e0f9649a9fcd2355446598ca35227d326bbef42aa0af06997eba7fa4ffcd2f1\",\"license\":\"GPLv3\"},\"src/interfaces/ICloningFacility.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IStats.sol\\\";\\n\\ninterface ICloningFacility {\\n    struct CloneData {\\n        address owner;\\n        bool for_sale;\\n        string uri; // IPFS url\\n        uint256 price;\\n        uint256 id;\\n    }\\n\\n    function create(string memory uri) external payable;\\n\\n    function changeOwner(address newOwner, uint256 cloneId)\\n        external\\n        returns (bool);\\n\\n    function changeSalesStatus(\\n        uint256 cloneId,\\n        bool status,\\n        uint256 price\\n    ) external returns (bool);\\n\\n    function changeUri(uint256 cloneId, string memory uri)\\n        external\\n        returns (bool);\\n\\n    function getCloneData(uint256 cloneId)\\n        external\\n        view\\n        returns (CloneData memory);\\n\\n    function getCloneStatLevel(uint256 cloneId, IStats.Stat stat)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getCloneUri(uint256 cloneId) external view returns (string memory);\\n\\n    function increaseStat(\\n        uint256 cloneId,\\n        IStats.Stat stat,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function decreaseStat(\\n        uint256 cloneId,\\n        IStats.Stat stat,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x817c5ad5212894fa6730ddca8ab81ad5d3c5da24dd5d2c11e46ea422bb7c4ca8\",\"license\":\"GPLv3\"},\"src/interfaces/ILearning.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\nimport \\\"./IStats.sol\\\";\\n\\ninterface ILearning {\\n    struct LearningState {\\n        bool is_learning;\\n        uint256 end_time;\\n        uint256 learning;\\n        uint256 start_time;\\n    }\\n    struct LearningLog {\\n        uint256 learning_points;\\n        uint256 skill_level;\\n    }\\n\\n    function getLearningLog(uint256 cloneId, uint256 skillId)\\n        external\\n        returns (LearningLog memory);\\n\\n    function getLearningState(uint256 cloneId)\\n        external\\n        returns (LearningState memory);\\n}\\n\",\"keccak256\":\"0x4f6cf9986a68eae06f70bdcc08a4bcf9149a3e9a33afb857b147d00e5d5e4748\",\"license\":\"GPLv3\"},\"src/interfaces/IStats.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\n\\ninterface IStats {\\n    enum Stat {\\n        charisma,\\n        ingenuity,\\n        intelligence,\\n        spirit,\\n        toughness\\n    }\\n}\\n\",\"keccak256\":\"0xe71107b3bf0d3846b5e1bb42bd78995352e1281abd0a3f0460dbcc489620186e\",\"license\":\"GPLv3\"},\"src/interfaces/UniversalData.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\npragma solidity ^0.8.0;\\n\\nimport \\\"../GameManager.sol\\\";\\nimport \\\"../interfaces/ICloningFacility.sol\\\";\\nimport \\\"../interfaces/ILearning.sol\\\";\\n\\ncontract UniversalData {\\n    GameManager internal gameManager;\\n\\n    modifier notInMaintenance() {\\n        require(\\n            !gameManager.maintenance(),\\n            \\\"Star Seekers: Down for Maintenance\\\"\\n        );\\n        _;\\n    }\\n    modifier onlyGameManager() {\\n        require(\\n            address(gameManager) == msg.sender,\\n            \\\"Star Seekers: Only game manager\\\"\\n        );\\n        _;\\n    }\\n    modifier onlyGameContract() {\\n        require(\\n            gameManager.isGameContract(msg.sender),\\n            \\\"Star Seekers: Not a game contract\\\"\\n        );\\n        _;\\n    }\\n    modifier onlyAdmin() {\\n        require(msg.sender == gameManager.admin(), \\\"Star Seekers: Admin only\\\");\\n        _;\\n    }\\n    modifier onlyCloneOwner(address _owner, uint256 _cloneId) {\\n        ICloningFacility cloningFacility = ICloningFacility(\\n            gameManager.contractAddresses(\\\"CloningFacility\\\")\\n        );\\n        ICloningFacility.CloneData memory cloneData = cloningFacility\\n            .getCloneData(_cloneId);\\n\\n        require(cloneData.owner == _owner, \\\"Star Seekers: Clone owner only\\\");\\n        _;\\n    }\\n    modifier notForSale(uint256 _cloneId) {\\n        ICloningFacility cloningFacility = ICloningFacility(\\n            gameManager.contractAddresses(\\\"CloningFacility\\\")\\n        );\\n        ICloningFacility.CloneData memory cloneData = cloningFacility\\n            .getCloneData(_cloneId);\\n\\n        require(\\n            cloneData.for_sale == false,\\n            \\\"Star Seekers: Can't complete action while clone is for sale\\\"\\n        );\\n        _;\\n    }\\n\\n    constructor(address _gameManager) {\\n        gameManager = GameManager(_gameManager);\\n    }\\n}\\n\",\"keccak256\":\"0x9f60d3a532e80921d1750173af333ea685e0a58ddf42d73be88c22232ea4795a\",\"license\":\"GPLv3\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051611a63380380611a6383398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6119d2806100916000396000f3fe60806040526004361061008a5760003560e01c806356df3db11161005957806356df3db11461024a57806379cfcbfb1461026a578063950a4b381461028a578063b6a46b3b146102b8578063e168813b146102cd57600080fd5b806322e0a86c146101975780633162d021146101cd57806342b9fe39146101fd578063491eae991461021d57600080fd5b366101925760008060009054906101000a90046001600160a01b03166001600160a01b03166366c861196040518163ffffffff1660e01b815260040160206040518083038186803b1580156100de57600080fd5b505afa1580156100f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610116919061157e565b6001600160a01b03163460405160006040518083038185875af1925050503d8060008114610160576040519150601f19603f3d011682016040523d82523d6000602084013e610165565b606091505b505090508061018f5760405162461bcd60e51b81526004016101869061181c565b60405180910390fd5b50005b600080fd5b3480156101a357600080fd5b506101b76101b2366004611623565b6102ed565b6040516101c49190611866565b60405180910390f35b3480156101d957600080fd5b506101ed6101e8366004611653565b610415565b60405190151581526020016101c4565b34801561020957600080fd5b506101ed6102183660046116b5565b6104e3565b34801561022957600080fd5b5061023d610238366004611623565b6105f6565b6040516101c491906117c8565b34801561025657600080fd5b506101ed6102653660046115a1565b61069d565b34801561027657600080fd5b506101ed6102853660046116b5565b6108a0565b34801561029657600080fd5b506102aa6102a536600461168a565b6109a4565b6040519081526020016101c4565b6102cb6102c63660046115e8565b610a09565b005b3480156102d957600080fd5b506101ed6102e83660046116e9565b61132f565b61032a6040518060a0016040528060006001600160a01b031681526020016000151581526020016060815260200160008152602001600081525090565b600082815260016020818152604092839020835160a08101855281546001600160a01b0381168252600160a01b900460ff16151592810192909252918201805491938401916103789061190f565b80601f01602080910402602001604051908101604052809291908181526020018280546103a49061190f565b80156103f15780601f106103c6576101008083540402835291602001916103f1565b820191906000526020600020905b8154815290600101906020018083116103d457829003601f168201915b50505050508152602001600282015481526020016003820154815250509050919050565b6000805460405163c04a7d0d60e01b81523360048201526001600160a01b039091169063c04a7d0d9060240160206040518083038186803b15801561045957600080fd5b505afa15801561046d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049191906115cc565b6104ad5760405162461bcd60e51b8152600401610186906117db565b5060008381526001602081905260409091208054841515600160a01b0260ff60a01b199091161781556002018290559392505050565b6000805460405163c04a7d0d60e01b81523360048201526001600160a01b039091169063c04a7d0d9060240160206040518083038186803b15801561052757600080fd5b505afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f91906115cc565b61057b5760405162461bcd60e51b8152600401610186906117db565b600084815260036020526040812083918560048111156105ab57634e487b7160e01b600052602160045260246000fd5b60048111156105ca57634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060008282546105e791906118f8565b90915550600195945050505050565b6000818152600160208190526040822001805460609291906106179061190f565b80601f01602080910402602001604051908101604052809291908181526020018280546106439061190f565b80156106905780601f1061066557610100808354040283529160200191610690565b820191906000526020600020905b81548152906001019060200180831161067357829003601f168201915b5093979650505050505050565b6000805460405163c04a7d0d60e01b81523360048201526001600160a01b039091169063c04a7d0d9060240160206040518083038186803b1580156106e157600080fd5b505afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071991906115cc565b6107355760405162461bcd60e51b8152600401610186906117db565b6000828152600160209081526040808320546001600160a01b03168352600282528083208054825181850281018501909352808352919290919083018282801561079e57602002820191906000526020600020905b81548152602001906001019080831161078a575b5050505050905060005b8151811161085057838282815181106107d157634e487b7160e01b600052603260045260246000fd5b6020026020010151141561083e578181815181106107ff57634e487b7160e01b600052603260045260246000fd5b60006020918202929092018101829052858252600181526040808320546001600160a01b0316835260028252909120835161083c928501906113f6565b505b6108496001826118c0565b90506107a8565b505050600081815260016020818152604080842080546001600160a01b0319166001600160a01b039790971696871790559483526002815293822080548083018255908352939091209092015590565b6000805460405163c04a7d0d60e01b81523360048201526001600160a01b039091169063c04a7d0d9060240160206040518083038186803b1580156108e457600080fd5b505afa1580156108f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091c91906115cc565b6109385760405162461bcd60e51b8152600401610186906117db565b6000848152600360205260408120839185600481111561096857634e487b7160e01b600052602160045260246000fd5b600481111561098757634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060008282546105e791906118c0565b6000828152600360205260408120818360048111156109d357634e487b7160e01b600052602160045260246000fd5b60048111156109f257634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002054905092915050565b60008054906101000a90046001600160a01b03166001600160a01b0316636c376cc56040518163ffffffff1660e01b815260040160206040518083038186803b158015610a5557600080fd5b505afa158015610a69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8d91906115cc565b15610ae55760405162461bcd60e51b815260206004820152602260248201527f53746172205365656b6572733a20446f776e20666f72204d61696e74656e616e604482015261636560f01b6064820152608401610186565b60006001600160a01b031660008054906101000a90046001600160a01b03166001600160a01b0316637dbdf1f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3c57600080fd5b505afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b74919061157e565b6001600160a01b03161415610bd75760405162461bcd60e51b815260206004820152602360248201527f53746172205365656b6572733a204e6f20636861696e6c696e6b2066656564206044820152621cd95d60ea1b6064820152608401610186565b60008054604051637733e61560e11b81526001600160a01b039091169063ee67cc2a90610c1f9060040160208082526004908201526310d4915160e21b604082015260600190565b60206040518083038186803b158015610c3757600080fd5b505afa158015610c4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6f919061157e565b905060008060009054906101000a90046001600160a01b03166001600160a01b0316637dbdf1f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610cc057600080fd5b505afa158015610cd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf8919061157e565b90506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610d3557600080fd5b505afa158015610d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6d919061172e565b50505091505060008160008054906101000a90046001600160a01b03166001600160a01b031663adddce366040518163ffffffff1660e01b815260040160206040518083038186803b158015610dc257600080fd5b505afa158015610dd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfa919061163b565b610e0491906118d8565b905080341015610e625760405162461bcd60e51b8152602060048201526024808201527f53746172205365656b6572733a20496e76616c6964207061796d656e7420616d6044820152631bdd5b9d60e21b6064820152608401610186565b604051600090309034908381818185875af1925050503d8060008114610ea4576040519150601f19603f3d011682016040523d82523d6000602084013e610ea9565b606091505b5050905080610eca5760405162461bcd60e51b81526004016101869061181c565b60008054604051637733e61560e11b8152602060048201526005602482015264436c6f6e6560d81b60448201526001600160a01b039091169063ee67cc2a9060640160206040518083038186803b158015610f2457600080fd5b505afa158015610f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5c919061157e565b6040516313db266360e31b81523360048201526001600160a01b039190911690639ed9331890602401602060405180830381600087803b158015610f9f57600080fd5b505af1158015610fb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd7919061163b565b6040805160a081018252338152600060208083018281528385018d815260608501849052608085018790528684526001808452959093208451815492511515600160a01b026001600160a81b03199093166001600160a01b03919091161791909117815591518051959650929485949293611056938501920190611441565b506060820151600282810191909155608092830151600390920191909155336000908152602091825260408082209385015184546001810186559483528383209094019390935580548351636bcf712560e01b8152935191936001600160a01b0390911692636bcf712592600480840193829003018186803b1580156110db57600080fd5b505afa1580156110ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611113919061163b565b11801561119857506000546040516360ad5e7160e11b81523360048201526001600160a01b039091169063c15abce29060240160206040518083038186803b15801561115e57600080fd5b505afa158015611172573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119691906115cc565b155b156112ed57866001600160a01b03166340c10f193360008054906101000a90046001600160a01b03166001600160a01b0316636bcf71256040518163ffffffff1660e01b815260040160206040518083038186803b1580156111f957600080fd5b505afa15801561120d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611231919061163b565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561127757600080fd5b505af115801561128b573d6000803e3d6000fd5b5050600054604051630790fc4b60e11b81523360048201526001600160a01b039091169250630f21f8969150602401600060405180830381600087803b1580156112d457600080fd5b505af11580156112e8573d6000803e3d6000fd5b505050505b604080518381523360208201527f15f4d592fc2960a5e30b8117f062ad921c54fe4eec96e5134f95c235f0b7a9c6910160405180910390a15050505050505050565b6000805460405163c04a7d0d60e01b81523360048201526001600160a01b039091169063c04a7d0d9060240160206040518083038186803b15801561137357600080fd5b505afa158015611387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ab91906115cc565b6113c75760405162461bcd60e51b8152600401610186906117db565b600083815260016020818152604090922084516113ec93919092019190850190611441565b5060019392505050565b828054828255906000526020600020908101928215611431579160200282015b82811115611431578251825591602001919060010190611416565b5061143d9291506114b4565b5090565b82805461144d9061190f565b90600052602060002090601f01602090048101928261146f5760008555611431565b82601f1061148857805160ff1916838001178555611431565b828001600101855582156114315791820182811115611431578251825591602001919060010190611416565b5b8082111561143d57600081556001016114b5565b8035600581106114d857600080fd5b919050565b600082601f8301126114ed578081fd5b813567ffffffffffffffff8082111561150857611508611960565b604051601f8301601f19908116603f0116810190828211818310171561153057611530611960565b81604052838152866020858801011115611548578485fd5b8360208701602083013792830160200193909352509392505050565b805169ffffffffffffffffffff811681146114d857600080fd5b60006020828403121561158f578081fd5b815161159a81611976565b9392505050565b600080604083850312156115b3578081fd5b82356115be81611976565b946020939093013593505050565b6000602082840312156115dd578081fd5b815161159a8161198e565b6000602082840312156115f9578081fd5b813567ffffffffffffffff81111561160f578182fd5b61161b848285016114dd565b949350505050565b600060208284031215611634578081fd5b5035919050565b60006020828403121561164c578081fd5b5051919050565b600080600060608486031215611667578081fd5b8335925060208401356116798161198e565b929592945050506040919091013590565b6000806040838503121561169c578182fd5b823591506116ac602084016114c9565b90509250929050565b6000806000606084860312156116c9578283fd5b833592506116d9602085016114c9565b9150604084013590509250925092565b600080604083850312156116fb578182fd5b82359150602083013567ffffffffffffffff811115611718578182fd5b611724858286016114dd565b9150509250929050565b600080600080600060a08688031215611745578081fd5b61174e86611564565b945060208601519350604086015192506060860151915061177160808701611564565b90509295509295909350565b60008151808452815b818110156117a257602081850181015186830182015201611786565b818111156117b35782602083870101525b50601f01601f19169290920160200192915050565b60208152600061159a602083018461177d565b60208082526021908201527f53746172205365656b6572733a204e6f7420612067616d6520636f6e747261636040820152601d60fa1b606082015260800190565b6020808252602a908201527f53746172205365656b6572733a204661696c656420746f2073656e642070617960408201526936b2b73a103a37b5b2b760b11b606082015260800190565b6020815260018060a01b0382511660208201526020820151151560408201526000604083015160a060608401526118a060c084018261177d565b905060608401516080840152608084015160a08401528091505092915050565b600082198211156118d3576118d361194a565b500190565b6000826118f357634e487b7160e01b81526012600452602481fd5b500490565b60008282101561190a5761190a61194a565b500390565b600181811c9082168061192357607f821691505b6020821081141561194457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461198b57600080fd5b50565b801515811461198b57600080fdfea2646970667358221220ae3b9c589f6c998e4a70c0f9632715d906c97270316b894e8b062736104c2b4064736f6c63430008040033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c806356df3db11161005957806356df3db11461024a57806379cfcbfb1461026a578063950a4b381461028a578063b6a46b3b146102b8578063e168813b146102cd57600080fd5b806322e0a86c146101975780633162d021146101cd57806342b9fe39146101fd578063491eae991461021d57600080fd5b366101925760008060009054906101000a90046001600160a01b03166001600160a01b03166366c861196040518163ffffffff1660e01b815260040160206040518083038186803b1580156100de57600080fd5b505afa1580156100f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610116919061157e565b6001600160a01b03163460405160006040518083038185875af1925050503d8060008114610160576040519150601f19603f3d011682016040523d82523d6000602084013e610165565b606091505b505090508061018f5760405162461bcd60e51b81526004016101869061181c565b60405180910390fd5b50005b600080fd5b3480156101a357600080fd5b506101b76101b2366004611623565b6102ed565b6040516101c49190611866565b60405180910390f35b3480156101d957600080fd5b506101ed6101e8366004611653565b610415565b60405190151581526020016101c4565b34801561020957600080fd5b506101ed6102183660046116b5565b6104e3565b34801561022957600080fd5b5061023d610238366004611623565b6105f6565b6040516101c491906117c8565b34801561025657600080fd5b506101ed6102653660046115a1565b61069d565b34801561027657600080fd5b506101ed6102853660046116b5565b6108a0565b34801561029657600080fd5b506102aa6102a536600461168a565b6109a4565b6040519081526020016101c4565b6102cb6102c63660046115e8565b610a09565b005b3480156102d957600080fd5b506101ed6102e83660046116e9565b61132f565b61032a6040518060a0016040528060006001600160a01b031681526020016000151581526020016060815260200160008152602001600081525090565b600082815260016020818152604092839020835160a08101855281546001600160a01b0381168252600160a01b900460ff16151592810192909252918201805491938401916103789061190f565b80601f01602080910402602001604051908101604052809291908181526020018280546103a49061190f565b80156103f15780601f106103c6576101008083540402835291602001916103f1565b820191906000526020600020905b8154815290600101906020018083116103d457829003601f168201915b50505050508152602001600282015481526020016003820154815250509050919050565b6000805460405163c04a7d0d60e01b81523360048201526001600160a01b039091169063c04a7d0d9060240160206040518083038186803b15801561045957600080fd5b505afa15801561046d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049191906115cc565b6104ad5760405162461bcd60e51b8152600401610186906117db565b5060008381526001602081905260409091208054841515600160a01b0260ff60a01b199091161781556002018290559392505050565b6000805460405163c04a7d0d60e01b81523360048201526001600160a01b039091169063c04a7d0d9060240160206040518083038186803b15801561052757600080fd5b505afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f91906115cc565b61057b5760405162461bcd60e51b8152600401610186906117db565b600084815260036020526040812083918560048111156105ab57634e487b7160e01b600052602160045260246000fd5b60048111156105ca57634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060008282546105e791906118f8565b90915550600195945050505050565b6000818152600160208190526040822001805460609291906106179061190f565b80601f01602080910402602001604051908101604052809291908181526020018280546106439061190f565b80156106905780601f1061066557610100808354040283529160200191610690565b820191906000526020600020905b81548152906001019060200180831161067357829003601f168201915b5093979650505050505050565b6000805460405163c04a7d0d60e01b81523360048201526001600160a01b039091169063c04a7d0d9060240160206040518083038186803b1580156106e157600080fd5b505afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071991906115cc565b6107355760405162461bcd60e51b8152600401610186906117db565b6000828152600160209081526040808320546001600160a01b03168352600282528083208054825181850281018501909352808352919290919083018282801561079e57602002820191906000526020600020905b81548152602001906001019080831161078a575b5050505050905060005b8151811161085057838282815181106107d157634e487b7160e01b600052603260045260246000fd5b6020026020010151141561083e578181815181106107ff57634e487b7160e01b600052603260045260246000fd5b60006020918202929092018101829052858252600181526040808320546001600160a01b0316835260028252909120835161083c928501906113f6565b505b6108496001826118c0565b90506107a8565b505050600081815260016020818152604080842080546001600160a01b0319166001600160a01b039790971696871790559483526002815293822080548083018255908352939091209092015590565b6000805460405163c04a7d0d60e01b81523360048201526001600160a01b039091169063c04a7d0d9060240160206040518083038186803b1580156108e457600080fd5b505afa1580156108f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091c91906115cc565b6109385760405162461bcd60e51b8152600401610186906117db565b6000848152600360205260408120839185600481111561096857634e487b7160e01b600052602160045260246000fd5b600481111561098757634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060008282546105e791906118c0565b6000828152600360205260408120818360048111156109d357634e487b7160e01b600052602160045260246000fd5b60048111156109f257634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002054905092915050565b60008054906101000a90046001600160a01b03166001600160a01b0316636c376cc56040518163ffffffff1660e01b815260040160206040518083038186803b158015610a5557600080fd5b505afa158015610a69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8d91906115cc565b15610ae55760405162461bcd60e51b815260206004820152602260248201527f53746172205365656b6572733a20446f776e20666f72204d61696e74656e616e604482015261636560f01b6064820152608401610186565b60006001600160a01b031660008054906101000a90046001600160a01b03166001600160a01b0316637dbdf1f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3c57600080fd5b505afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b74919061157e565b6001600160a01b03161415610bd75760405162461bcd60e51b815260206004820152602360248201527f53746172205365656b6572733a204e6f20636861696e6c696e6b2066656564206044820152621cd95d60ea1b6064820152608401610186565b60008054604051637733e61560e11b81526001600160a01b039091169063ee67cc2a90610c1f9060040160208082526004908201526310d4915160e21b604082015260600190565b60206040518083038186803b158015610c3757600080fd5b505afa158015610c4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6f919061157e565b905060008060009054906101000a90046001600160a01b03166001600160a01b0316637dbdf1f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610cc057600080fd5b505afa158015610cd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf8919061157e565b90506000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610d3557600080fd5b505afa158015610d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6d919061172e565b50505091505060008160008054906101000a90046001600160a01b03166001600160a01b031663adddce366040518163ffffffff1660e01b815260040160206040518083038186803b158015610dc257600080fd5b505afa158015610dd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfa919061163b565b610e0491906118d8565b905080341015610e625760405162461bcd60e51b8152602060048201526024808201527f53746172205365656b6572733a20496e76616c6964207061796d656e7420616d6044820152631bdd5b9d60e21b6064820152608401610186565b604051600090309034908381818185875af1925050503d8060008114610ea4576040519150601f19603f3d011682016040523d82523d6000602084013e610ea9565b606091505b5050905080610eca5760405162461bcd60e51b81526004016101869061181c565b60008054604051637733e61560e11b8152602060048201526005602482015264436c6f6e6560d81b60448201526001600160a01b039091169063ee67cc2a9060640160206040518083038186803b158015610f2457600080fd5b505afa158015610f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5c919061157e565b6040516313db266360e31b81523360048201526001600160a01b039190911690639ed9331890602401602060405180830381600087803b158015610f9f57600080fd5b505af1158015610fb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd7919061163b565b6040805160a081018252338152600060208083018281528385018d815260608501849052608085018790528684526001808452959093208451815492511515600160a01b026001600160a81b03199093166001600160a01b03919091161791909117815591518051959650929485949293611056938501920190611441565b506060820151600282810191909155608092830151600390920191909155336000908152602091825260408082209385015184546001810186559483528383209094019390935580548351636bcf712560e01b8152935191936001600160a01b0390911692636bcf712592600480840193829003018186803b1580156110db57600080fd5b505afa1580156110ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611113919061163b565b11801561119857506000546040516360ad5e7160e11b81523360048201526001600160a01b039091169063c15abce29060240160206040518083038186803b15801561115e57600080fd5b505afa158015611172573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119691906115cc565b155b156112ed57866001600160a01b03166340c10f193360008054906101000a90046001600160a01b03166001600160a01b0316636bcf71256040518163ffffffff1660e01b815260040160206040518083038186803b1580156111f957600080fd5b505afa15801561120d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611231919061163b565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561127757600080fd5b505af115801561128b573d6000803e3d6000fd5b5050600054604051630790fc4b60e11b81523360048201526001600160a01b039091169250630f21f8969150602401600060405180830381600087803b1580156112d457600080fd5b505af11580156112e8573d6000803e3d6000fd5b505050505b604080518381523360208201527f15f4d592fc2960a5e30b8117f062ad921c54fe4eec96e5134f95c235f0b7a9c6910160405180910390a15050505050505050565b6000805460405163c04a7d0d60e01b81523360048201526001600160a01b039091169063c04a7d0d9060240160206040518083038186803b15801561137357600080fd5b505afa158015611387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ab91906115cc565b6113c75760405162461bcd60e51b8152600401610186906117db565b600083815260016020818152604090922084516113ec93919092019190850190611441565b5060019392505050565b828054828255906000526020600020908101928215611431579160200282015b82811115611431578251825591602001919060010190611416565b5061143d9291506114b4565b5090565b82805461144d9061190f565b90600052602060002090601f01602090048101928261146f5760008555611431565b82601f1061148857805160ff1916838001178555611431565b828001600101855582156114315791820182811115611431578251825591602001919060010190611416565b5b8082111561143d57600081556001016114b5565b8035600581106114d857600080fd5b919050565b600082601f8301126114ed578081fd5b813567ffffffffffffffff8082111561150857611508611960565b604051601f8301601f19908116603f0116810190828211818310171561153057611530611960565b81604052838152866020858801011115611548578485fd5b8360208701602083013792830160200193909352509392505050565b805169ffffffffffffffffffff811681146114d857600080fd5b60006020828403121561158f578081fd5b815161159a81611976565b9392505050565b600080604083850312156115b3578081fd5b82356115be81611976565b946020939093013593505050565b6000602082840312156115dd578081fd5b815161159a8161198e565b6000602082840312156115f9578081fd5b813567ffffffffffffffff81111561160f578182fd5b61161b848285016114dd565b949350505050565b600060208284031215611634578081fd5b5035919050565b60006020828403121561164c578081fd5b5051919050565b600080600060608486031215611667578081fd5b8335925060208401356116798161198e565b929592945050506040919091013590565b6000806040838503121561169c578182fd5b823591506116ac602084016114c9565b90509250929050565b6000806000606084860312156116c9578283fd5b833592506116d9602085016114c9565b9150604084013590509250925092565b600080604083850312156116fb578182fd5b82359150602083013567ffffffffffffffff811115611718578182fd5b611724858286016114dd565b9150509250929050565b600080600080600060a08688031215611745578081fd5b61174e86611564565b945060208601519350604086015192506060860151915061177160808701611564565b90509295509295909350565b60008151808452815b818110156117a257602081850181015186830182015201611786565b818111156117b35782602083870101525b50601f01601f19169290920160200192915050565b60208152600061159a602083018461177d565b60208082526021908201527f53746172205365656b6572733a204e6f7420612067616d6520636f6e747261636040820152601d60fa1b606082015260800190565b6020808252602a908201527f53746172205365656b6572733a204661696c656420746f2073656e642070617960408201526936b2b73a103a37b5b2b760b11b606082015260800190565b6020815260018060a01b0382511660208201526020820151151560408201526000604083015160a060608401526118a060c084018261177d565b905060608401516080840152608084015160a08401528091505092915050565b600082198211156118d3576118d361194a565b500190565b6000826118f357634e487b7160e01b81526012600452602481fd5b500490565b60008282101561190a5761190a61194a565b500390565b600181811c9082168061192357607f821691505b6020821081141561194457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461198b57600080fd5b50565b801515811461198b57600080fdfea2646970667358221220ae3b9c589f6c998e4a70c0f9632715d906c97270316b894e8b062736104c2b4064736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "changeOwner(address,uint256)": {
        "details": "should only be callable by other game contracts",
        "params": {
          "_cloneId": "cloneId of the",
          "_newOwner": "address of the new owner"
        },
        "returns": {
          "_0": "bool success"
        }
      },
      "changeSalesState(uint256,bool,uint256)": {
        "details": "should only be callable by other game contracts",
        "params": {
          "_cloneId": "uint256 clone id",
          "_forSale": "bool sale state",
          "_price": "uint256 price of clone"
        },
        "returns": {
          "_0": "bool success"
        }
      },
      "changeUri(uint256,string)": {
        "details": "should only be callable by other game contracts",
        "params": {
          "_cloneId": "uint256 cloneId",
          "_uri": "string ipfs url for json endpoint"
        }
      },
      "create(string)": {
        "details": "gets the price of the chains base token from chainlink",
        "params": {
          "_uri": "json IPFS endpoint"
        }
      },
      "decreaseStat(uint256,uint8,uint256)": {
        "details": "should only be callable by other game contracts",
        "params": {
          "_amount": "uin256 amount to decrease stat by",
          "_cloneId": "clone id",
          "_stat": "stat enum"
        },
        "returns": {
          "_0": "bool success"
        }
      },
      "getCloneData(uint256)": {
        "details": "should only be callable by other game contracts",
        "params": {
          "_cloneId": "uint256 cloneId"
        },
        "returns": {
          "_0": "CloneData struct"
        }
      },
      "getCloneStatLevel(uint256,uint8)": {
        "details": "should only be callable by other game contracts",
        "params": {
          "_cloneId": "clone id",
          "_stat": "clone stat to retrieve level of"
        },
        "returns": {
          "_0": "uint256 clone stat level"
        }
      },
      "getCloneUri(uint256)": {
        "details": "should be IPFS JSON endpoint",
        "params": {
          "_cloneId": "clone id"
        },
        "returns": {
          "_0": "string clone uri"
        }
      },
      "increaseStat(uint256,uint8,uint256)": {
        "details": "should only be callable by other game contracts",
        "params": {
          "_amount": "uin256 amount to increase stat by",
          "_cloneId": "clone id",
          "_stat": "stat enum"
        },
        "returns": {
          "_0": "bool success"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "changeOwner(address,uint256)": {
        "notice": "changes the owner of a given clone to the given address"
      },
      "changeSalesState(uint256,bool,uint256)": {
        "notice": "changes the owner of a given clone to the given address"
      },
      "changeUri(uint256,string)": {
        "notice": "changes the uri for a given clone id"
      },
      "create(string)": {
        "notice": "Creates a new clone"
      },
      "decreaseStat(uint256,uint8,uint256)": {
        "notice": "decreases a clones stat by the given amount"
      },
      "getCloneData(uint256)": {
        "notice": "changes the uri for a given clone id"
      },
      "getCloneStatLevel(uint256,uint8)": {
        "notice": "gets the level for a specific stat on a specific clone"
      },
      "getCloneUri(uint256)": {
        "notice": "gets clone URI"
      },
      "increaseStat(uint256,uint8,uint256)": {
        "notice": "increases a clones stat by the given amount"
      }
    },
    "notice": "this contract serves as the central location for clone s",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12760,
        "contract": "src/CloningFacility.sol:CloningFacility",
        "label": "gameManager",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(GameManager)11452"
      },
      {
        "astId": 10633,
        "contract": "src/CloningFacility.sol:CloningFacility",
        "label": "cloneData",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(CloneData)10627_storage)"
      },
      {
        "astId": 10639,
        "contract": "src/CloningFacility.sol:CloningFacility",
        "label": "clonesOwnedByAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 10647,
        "contract": "src/CloningFacility.sol:CloningFacility",
        "label": "stats",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_mapping(t_enum(Stat)12751,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(GameManager)11452": {
        "encoding": "inplace",
        "label": "contract GameManager",
        "numberOfBytes": "20"
      },
      "t_enum(Stat)12751": {
        "encoding": "inplace",
        "label": "enum IStats.Stat",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_enum(Stat)12751,t_uint256)": {
        "encoding": "mapping",
        "key": "t_enum(Stat)12751",
        "label": "mapping(enum IStats.Stat => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_enum(Stat)12751,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(enum IStats.Stat => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_enum(Stat)12751,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(CloneData)10627_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CloningFacility.CloneData)",
        "numberOfBytes": "32",
        "value": "t_struct(CloneData)10627_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(CloneData)10627_storage": {
        "encoding": "inplace",
        "label": "struct CloningFacility.CloneData",
        "members": [
          {
            "astId": 10618,
            "contract": "src/CloningFacility.sol:CloningFacility",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 10620,
            "contract": "src/CloningFacility.sol:CloningFacility",
            "label": "for_sale",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 10622,
            "contract": "src/CloningFacility.sol:CloningFacility",
            "label": "uri",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 10624,
            "contract": "src/CloningFacility.sol:CloningFacility",
            "label": "price",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 10626,
            "contract": "src/CloningFacility.sol:CloningFacility",
            "label": "id",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}